{"id":"js/script.js","dependencies":[{"name":"D:\\SOURCEIT\\Javascript2\\HomeWorkFirst\\.babelrc","includedInParent":true,"mtime":1585219982000},{"name":"D:\\SOURCEIT\\Javascript2\\HomeWorkFirst\\package.json","includedInParent":true,"mtime":1585482787811}],"generated":{"js":"'use strict';\n/*1. Задача (Система уравнений)*/\n// let a = 6, b = 6;\n// let x = a > b ? console.log(a + b / 2 * 4)\n//     : a === b ? console.log(400)\n//         : a < b ? console.log(a - b + 2 / b * 4)\n//             : console.log(\"Something wrong\");\n\n/*2. Задача (Попадание точки в область)*/\n//1.1\n// let x = prompt(\"Type x..\");\n// let y = prompt(\"Type y..\");\n//\n// if (x != \"\" && y != \"\") {\n//     if (x >= -3 && x <= 3 && y >= 0 && y <= 3) {\n//         alert(\"Вы попали в область :)\");\n//     } else {\n//         alert(\"Вы не попали в область :(\");\n//     }\n// }else{\n//     alert(\"Вы не ввели число\");\n// }\n//1.2\n// let x = prompt(\"Type x..\");\n// let y = prompt(\"Type y..\");\n//\n// if (x != \"\" && y != \"\") {\n//     if (x == 0  && y >= -1 && y <= 1) {\n//         alert(\"Вы попали в область :)\");\n//     } else {\n//         alert(\"Вы не попали в область :(\");\n//     }\n// }else{\n//     alert(\"Вы не ввели число\");\n// }\n//1.3\n// let x = prompt(\"Type x..\");\n// let y = prompt(\"Type y..\");\n// let circle = x**2 + y**2 === 1;\n//\n// if (x != \"\" && y != \"\") {\n//\n//     if (x >= -2 && x <= 0 && y >= -2 && y <= 0 || x**2 + y**2 <= 1 ) {\n//         alert(\"Вы попали в область :)\");\n//     } else {\n//         alert(\"Вы не попали в область :(\");\n//     }\n// }else{\n//     alert(\"Вы не ввели число\");\n// }\n\n/*3. Задача (Оператор switch)\r\nПри помощи prompt запросить у пользователя номер дня недели.Вывести при помощи alert\r\nназвание дня недели. если пользователь ввел некорректное значение вывести сообщение\r\n \"Такого дня недели не существует!\"\r\n*/\n// let numberOfWeek = +prompt('Type a number of week!');\n// switch (numberOfWeek) {\n//     case 1: alert(\"Monday\")\n//         break\n//     case 2: alert(\"Tuesday\")\n//         break\n//     case 3: alert(\"Wednesday\")\n//         break\n//     case 4: alert(\"Thursday\")\n//         break\n//     case 5: alert(\"Friday\")\n//         break\n//     case 6: alert(\"Saturday\")\n//         break\n//     case 7: alert(\"Sunday\")\n//         break\n//     default: alert(\"There is no such a day of the week!!\")\n// }\n\n/*4. Задача (Условный оператор)\r\nПользователь вводит два числа. Найти и вывести максимальное из двух чисел.\r\n */\n// let first = +prompt(\"Type a first number!\");\n// let second = +prompt(\"Type a second number\");\n// let max = first <= second ? max = second : max = first;\n// alert(`Max is ${max}`);\n\n/*5. Задача (Условный оператор)\r\nНайти максимальное из двух чисел. Учтите вариант равенства чисел\r\n*/\n// let num1 = 1;\n// let num2 = 0;\n// let max;\n//\n// max = num1 == num2? alert(\"Числа равны\")\n//     : num1 > num2? alert(\"Первое число больше второго\"):alert(\"Второе число больше первого\");\n\n/*6. Задача (Условный оператор)\r\nВ первом подъезде квартиры с 1 по 20. Во втором с 21 по 48. В третьем с 49 по 90. Пользователь вводит номер квартиры.\r\nПрограмма должна указать в каком подъезде находится данная квартира. Программа должна учитывать\r\nвариант ввода чисел за пределами диапазона 1..90.\r\n */\n// let apartmentNumber = +prompt(\"Type your number of apartment!\");\n// if (apartmentNumber >= 1 && apartmentNumber <= 20) {\n//     alert(\"Your apartment in the first porch \");\n// } else if (apartmentNumber >= 21 && apartmentNumber <= 48) {\n//     alert(\"Your apartment in the second porch \");\n// } else if (apartmentNumber >= 49 && apartmentNumber <= 90) {\n//     alert(\"Your apartment in the third porch \");\n// } else {\n//     alert(\"There is no such apartment\");\n// }\n\n/*7. Задача (Условный оператор)\r\nПользователь вводит логин и пароль. Если логин и пароль совпадают с указанными ниже, то выводится «Добро пожаловать».\r\nЕсли не совпадают – то «Ошибка входа»\r\n */\n// let login = \"admin\";\n// let password = \"admin\";\n// let userLogin = prompt(\"Type your login!\");\n// let userPassword = prompt(\"Type your password!\");\n// if (login === userLogin && login === userPassword) {\n//     alert(\"Wellcome\");\n// } else {\n//     alert(\"Login failed\");\n// }\n\n/*8. Задача (Условный оператор)\r\nПользователь вводит год рождения. Программа показывает количество лет и если лет больше или равно 16,\r\n то пишет – «добро пожаловать», если нет – «вход воспрещен».\r\n */\n// const minPass = 16;\n// let user = +prompt(\"Type your age!\");\n// if (minPass <= user) {\n//     alert(Wellcome');\n// } else {\n//     alert(\"No entry\");\n// }\n\n/*9. Задача (Условный оператор)\r\nСоздайте программу, которая выводит надбавку за стаж. Пользователь вводит стаж работы, а программа пишет ему надбавку.\r\n */\n// const experience = +prompt(\"Type your experience\");\n// if (experience >= 0 && experience <= 3) {\n//     alert(\"Your bonus will be 0%\");\n// } else if (experience > 3 && experience <= 10) {\n//     alert(\"Your bonus will be 10%\");\n// } else if (experience > 10 && experience <= 20) {\n//     alert(\"Your bonus will be 20%\");\n// } else if (experience > 20) {\n//     alert(\"Your bonus will be 25%\");\n// }else{\n//     alert(\"Wrong number\");\n// }\n\n/*10. Задача (креативная)\r\nНаписать программу которая будет склонять слово “товар” в зависимости от количества товаров в корзине. Например 1 - товар, 4 - товара, 6 - товаров.\r\n*/\n// let word = 'товар';\n// let userNum = +prompt(\"Введите число..\");\n// let magicStick = userNum % 100;\n//\n// if (magicStick >= 5 && magicStick <= 20 || magicStick === 0){\n//     alert(`У вас ${userNum} ${word + \"ов\"}`);\n// }else {\n//     magicStick = userNum % 10;\n//     if (magicStick > 1 && magicStick <= 4) {\n//         magicStick = userNum % 10;\n//         alert(`У вас ${userNum} ${word + \"а\"}`);\n//     } else if (magicStick === 1) {\n//         alert(`У вас ${userNum} ${word}`);\n//     } else {\n//         alert(\"Что то пошло не так\");\n//     }\n// }\n\n/*1. Задание (циклы)\r\nВывести числа от 4 до 400 на экран.\r\n*/\n// for (let i = 4; i <= 400; i++ ) {\n//     console.log(i);\n// }\n\n/*2. Задание (циклы)\r\nВывести числа в последовательности: 4 7 10 13 с помощью цикла.\r\n*/\n// for (let i = 4; i <= 13; i+=3 ) {\n//     console.log(i);\n// }\n\n/*3. Задание (циклы)\r\nВывести числа 654 653 652 до нуля.\r\n*/\n// for (let i = 654; i >=0; i--){\n//     console.log(i);\n// }\n\n/*4. Задание (циклы)\r\nВывести все годы с 1983 до 2017.\r\n*/\n// for (let i = 1983; i <= 2017; i++){\n//     console.log(i);\n// }\n\n/*5. Задание (циклы)\r\nВывести числа -4 -2 0 2 4 6 ...100.\r\n*/\n// for (let i = -4; i <= 100; i+=2){\n//     console.log(i);\n// }\n\n/*6. Задание (циклы)\r\nС помощью цикла напечатайте таблицу умножения на 7 от 1 до 9.\r\n*/\n// let i = 1;\n// for (i = 1; i <= 10; i++){\n//     let n  = i * 7;\n//     console.log(n);\n// }\n\n/*7. Задание (циклы)\r\nВыведите с помощью цикла коды спецсимволов от 1000 до 2000. Напомню, что спецсимвол получается комбинацией &#число; Например ӆ\r\n*/\n// for (let i = 500; i <= 2000; i++){\n//     let span = document.createElement('span');\n//     span.innerHTML = `&#${i} `;\n//     document.body.appendChild(span);\n// }\n\n/*8. Задание (циклы)\r\nНайти сумму чисел от 0 до 100 (включительно). (0+1+2+3+4+5).\r\n*/\n// let n= 0;\n// for (let i = 0; i <= 100; i++){\n//      n += i;\n// }\n// console.log(n);\n\n/*9. Задание (циклы)\r\nС помощью цикла вывести произведение чисел от 1 до 50.\r\n*/\n// let n = 1;\n// for (let i = 1; i <= 50; i++){\n//     n *= i;\n// }\n// console.log(n);\n\n/*10. Задание\r\nЗаполните массив следующим образом: в первый элемент запишите\r\n 'x', во второй 'xx', в третий 'xxx' и так далее. Длину массива вводить через prompt.\r\n*/\n// let myLength = +prompt(\"Type length of your array..\");\n// let arr = [];\n// let elem = \"\";\n//\n// for (let i = 0; i < myLength; i++){\n//     elem += 'x';\n//     arr.push(elem)\n// }\n// console.log(arr);\n\n/*Заполните массив следующим образом: в первый элемент запишите '1',\r\nво второй '22', в третий '333' и так далее. Длину массива вводить через prompt.*/\n// let myLength = +prompt(\"Type length of your array..\");\n// let arr = [];\n// let elem = \"\";\n//\n// for (let i = 1; i < myLength; i++){\n//\n//     for (let j = 1; j <= i; j++){\n//         elem += i;\n//\n//     }\n//     arr.push(elem);\n//     elem = \"\";\n//\n// }\n// console.log(arr);\n\n/*12. Задание\r\nДан массив с числами. Узнайте сколько элементов с начала массива надо сложить,\r\nчтобы в сумме получилось больше 10-ти.\r\n*/\n// let sum = 0;\n// let count = 0;\n// let arr = [10, 1, 5, 8, 9, 10];\n//\n// for (let i = 0; i <= arr.length; i++){\n//     if (arr[i] >= 10){\n//         count = 1;\n//         break;\n//     }else {\n//         sum += arr[i];\n//         count++;\n//         console.log(sum);\n//         if (sum > 10){\n//             break;\n//         }\n//     }\n// }\n// console.log(`Вам понадобилось ${count} элементов`);\n\n/*13. Задание\r\nДан массив с числами. Не используя метода reverse переверните его элементы в обратном порядке.\r\n*/\n// let arr = [1, 2, 3, 4, 5, 6];\n// let length = arr.length - 1;\n// for (let i = length; i >= 0; i--) {\n//     console.log(arr[i]);\n// }\n\n/*14. Задание\r\nДан массив с числами. Запишите в новый массив только те числа, которые больше нуля и меньше 10-ти.\r\n*/\n// let arr = [1, 5, 12, 44, 5, 56, 7, 2, 1, 88];\n// let newArr = [];\n// for (let i = 0; i < arr.length; i++){\n//     if (arr[i] > 0 && arr[i] < 10){\n//         newArr.push(arr[i]);\n//     }\n// }\n// console.log(newArr);\n\n/*15. Задание\r\nДан массив с целыми числами. Создайте из него новый массив, где останутся лежать только четные из этих чисел.\r\n*/\n// let arr = [1, 2, 3, 4, 6, 8, 10, 11, 14, 66, 33, 22];\n// let newArr = [];\n// for (let i = 0; i < arr.length; i++){\n//     if (arr[i]%2 === 0){\n//         newArr.push(arr[i]);\n//     }\n// }\n// console.log(newArr);\n\n/*16. Задание\r\nДан массив [1, 2, 3, 4, 5, 6]. Сделать из него массив [2, 1, 4, 3, 6, 5]\r\n*/\n// let arr = [1, 2, 3, 4, 5, 6];\n// let current;\n// for (let i = 0; i < arr.length; i+=2){\n//     current = arr[i];\n//     arr[i] = arr[i+1];\n//     arr[i+1] = current;\n// }\n//\n// console.log(arr);\n\n/*17. Задание\r\nДан массив [1, 2, 3, 4, 5, 6]. Сделать из него массив [5, 6, 3, 4, 1, 2]\r\n*/\n// let arr = [1, 2, 3, 4, 5, 6];\n// arr.reverse();\n// let current;\n// for (let i = 0; i < arr.length; i+=2){\n//     current = arr[i];\n//     arr[i] = arr[i+1];\n//     arr[i+1] = current;\n// }\n//\n// console.log(arr);\n\n/*19. Задание\r\nСформировать 3 матрицы изображенные на картинке\r\n*/\n// 1.1\n\n/*\r\nconst size = 10;\r\nconst matrix = [];\r\nfor (let i = 1; i < size; i++){\r\n    matrix[i] = [];\r\n    for (let j = 1; j < size; j++){\r\n        matrix[i][j] = i * j;\r\n    }\r\n}\r\nconsole.log(matrix);*/\n// 1.2\n// const size = 10;\n// const matrix = [];\n// for (let i = 0; i < size; i++){\n//     matrix[i] = [];\n//     for (let j = 0; j < size; j++){\n//         if (i === j){\n//            matrix[i][j] = 1;\n//         }else if (i === size - 1 - j){\n//             matrix[i][j] = 2;\n//         }else if (i < j && i <= size - 1 - j){\n//             matrix[i][j] = 3;\n//         }else if (i < j && i >= size - 1 - j){\n//             matrix[i][j] = 4;\n//         }else if (i > j && i >= size - 1 - j){\n//             matrix[i][j] = 5;\n//         }else if (i > j && i <= size - 1 - j){\n//             matrix[i][j] = 6;\n//         }\n//     }\n// }\n// console.log(matrix);\n//1.3 не осилил пока)\n// let size = 10;\n// let matrix = [];\n// for (let i = 0; i < size; i++){\n//     matrix[i] = [];\n//     for (let j = 0; j < size; j++){\n//         if (i === j){\n//             matrix[i][j] = 1;\n//             matrix[i][0] = 1;\n//             break;\n//         }else if (){\n//\n//         }\n//         else{\n//             matrix[i][j] = 0;\n//         }\n//     }\n// }\n// console.log(matrix);\n\n/* Задание 1\r\nНаписать функцию которая первым принимает значение, которым заполнять массив, а вторым - сколько элементов должно\r\nбыть в массиве. Пример: arrayFill('x', 5) сделает массив ['x', 'x', 'x', 'x', 'x'].\r\n*/\n// function arrayFill(x, size) {\n//\n//     let arr = [];\n//     for (let i = 0; i < size; i++){\n// //         arr[i] = x;\n//     }\n//     console.log(arr);\n// }\n// arrayFill(\"x\", 5);\n\n/*Задание 2\r\nДан трехмерный массив с числами, например [[[1, 2], [3, 4]], [[5, 6], [7, 8]]].\r\nНайдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.\r\n */\n// function tripleSum() {\n//     let sum = 0;\n//     let arr = [[[1, 2, 3], [4, 5], [6, 7], [8, 9]]];\n//\n//     for (let i = 0; i < arr.length; i++){\n//         for (let j = 0; j < arr[i].length; j++){\n//             for(let k = 0; k < arr[i][j].length; k++){\n//                 sum += arr[i][j][k];\n//             }\n//         }\n//     }\n// console.log(sum);\n// }\n// tripleSum();\n\n/*Задание 3\r\nСделайте функцию isNumberInRange, которая параметром принимает число и проверяет, что оно больше нуля и меньше 10.\r\nЕсли это так - пусть функция возвращает true, если не так - false.\r\n*/\n// function isNumberInRange(num) {\n//     num = num > 0 && num < 10 ? true : false;\n//     return num;\n//\n// }\n//\n// console.log(isNumberInRange(1));\n\n/*Задание 4\r\nСделайте функцию isEven() (even - это четный), которая параметром принимает целое число и проверяет:\r\nчетное оно или нет. Если четное - пусть функция возвращает true, если нечетное - false.\r\n*/\n// function isEven(intNum) {\n//     intNum = intNum % 2 === 0 ? true : false;\n//     return intNum;\n// }\n//\n// console.log(isEven(211));\n\n/*Задание 5\r\nДан массив с целыми числами. Создайте из него новый массив, где останутся лежать только четные из этих чисел.\r\nДля этого используйте вспомогательную функцию isEven из предыдущей задачи\r\n*/\n// function isEven(intNum) {\n//     intNum = intNum % 2 === 0 ? true : false;\n//     return intNum;\n// }\n// function checkIsEven() {\n//     let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n//     let newArray = []\n//     for (let i = 0; i < arr.length; i++){\n//         if (isEven(arr[i])){\n//             newArray.push(arr[i]);\n//         }\n//     }\n//     console.log(newArray);\n// }\n// checkIsEven();\n\n/*Задание 6\r\nСделайте функцию getDivisors, которая параметром принимает число и возвращает массив его делителей\r\n(чисел, на которое делится данное число).\r\n*/\n// function getDivisors(num) {\n//     let arr = []\n//     for (let i = 0; i <= num; i++){\n//         if (num % i === 0){\n//             arr.push(i);\n//         }\n//     }\n//     return arr;\n// }\n//\n// console.log(getDivisors(10));\n\n/*Задание 7\r\nСоздайте функцию, которая получает два параметра – число и степень числа. Используя ** внутри функции,\r\n возведите число в степень и выведите с помощью console.log.\r\n*/\n// function pow (num, n) {\n//     console.log(num**n);\n// }\n// pow(2, 3);\n\n/*Задание 8\r\nФункция принимает параметр - возраст пользователя. Если число больше 16 – то выводим «добро пожаловать»,\r\nесли меньше – “вы еще молоды”\r\n*/\n// function isAge(age){\n//\n//     if (age > 16){\n//         alert(\"Welcome!!!\");\n//     }else{\n//         alert(\"You're still yong!\");\n//     }\n// }\n// isAge(16);\n\n/*Задание 9\r\nМодифицируйте предыдущий пример – учтите вариант, если пользователь не передал параметр в функцию.\r\nВ таком случае выведите сообщение – “Введите возраст”. Реализуйте два вида проверки наличия аргумента –\r\nпроверка на undefined и оператор ||.\r\n*/\n// function isAge(age){\n//     age = age || prompt(\"Type your age!!\");\n//         if (age > 16) {\n//             alert(\"Welcome!!!\");\n//         } else {\n//             alert(\"You're still yong!\");\n//         }\n//\n// }\n// isAge();\n\n/*Задание 10\r\nСоздайте функцию, которая считает длину массива и возвращает ее в виде числа. Массив в функцию передается как аргумент.\r\nЕсли аргумент не задан – выводится сообщение об ошибке.\r\n*/\n// function arrayLength(arr) {\n//     return  arr ? arr.length : alert(\"Err0r\");\n// }\n// console.log(arrayLength([2,2,3,4,5]));\n\n/*Задание 11\r\nПользователь вводит числа. Если число больше 10, то функция возвращает квадрат числа, если меньше 7 – пишет,\r\nчто число меньше 7. Если 8, 9 – то возвращает соответственно 7 или 8. Реализуйте решение с несколькими return.\r\n*/\n// function returner() {\n//     let num =  parseFloat(prompt(\"Type a number\"));\n//     let result = null;\n//     if (num > 10){\n//         return Math.sqrt(num);\n//     }else if (num < 7){\n//         return alert(\"The number less than 7\");\n//     }else if (num === 7 || num === 8){\n//         result = num;\n//         return result;\n//     }else{\n//         alert(\"err0or\");\n//     }\n// }\n//\n// console.log(returner());\n\n/*Задание 12\r\nДана строка. Сделайте заглавным первый символ каждого слова этой строки. Для этого сделайте\r\nфункцию ucfirst, которая будет получать строку, делать первый символ этой строки заглавным и возвращать обратно\r\n строку с заглавной первой буквой.*/\n// function ucFirst(string) {\n//     let firstChar = string[0].toUpperCase();\n//     let withoutFirst = string.slice(1);\n//     let newStr = firstChar + withoutFirst;\n//     return newStr;\n// }\n// console.log(ucFirst(\"first character train matrix\"));\n// function ucFirst(string) {\n//     let arrayWords = string.split(\" \"); //разбиваем строку на массив\n//     let result = \"\";  // В будущем запишем результат\n//     for (let i = 0; i < arrayWords.length; i++){\n//         let word = arrayWords[i];\n//         let firstChar = word.slice(0, 1).toUpperCase();\n//         let otherSentence = word.slice(1, word.length);\n//         result += firstChar + otherSentence + \" \";\n//     }\n//     return result;\n// }\n// console.log(ucFirst(\"first character train matrix\"));\n\n/*Задание 13\r\nДана строка вида 'var_text_hello'. Сделайте из него текст 'varTextHello'.*/\n\n/*function trueStr(str) {\r\n    return str.replace(/_/gi , \" \", str);\r\n}\r\n\r\nconsole.log(trueStr(\"qwe_qwe_qwe\"));\r\n*/\n\n/*Задание 14\r\nСделайте функцию inArray, которая определяет, есть в массиве элемент с заданным текстом или нет. Функция первым\r\nпараметром должна принимать текст элемента, а вторым - массив, в котором делается поиск. Функция должна возвращать\r\ntrue или false. Показать решение.*/\n// let arr = [\"roll\", \"pit\", \"staff\", \"prom\", \"sell\", \"karma\"];\n//\n// function inArray(str, arr) {\n//     let found = false;\n//     for (let i = 0; i < arr.length; i++) {\n//\n//         if (str === arr[i]) {\n//             found = true;\n//         }\n//     }\n//     return found;\n// }\n//\n// console.log(inArray(\"prosm\", arr));\n\n/*Задание 15\r\nДана строка, например, '123456'. Сделайте из нее '214365'.*/\n// function reverseStr() {\n//     let str = \"123456\";\n//     let arr = str.split(\"\", str.length );\n//     let current;\n//     for (let i = 0; i < arr.length; i+=2){\n//         current = arr[i];\n//         arr[i] = arr[i + 1];\n//         arr[i + 1] = current;\n//     }\n//     str = arr.join(\"\");\n//     console.log(str);\n// }\n// reverseStr();\n\n/*Задание 16\r\nНапиши функцию создания генератора sequence(start, step). Она при вызове возвращает другую функцию-генератор,\r\nкоторая при каждом вызове дает число на 1 больше, и так до бесконечности. Начальное число, с которого начинать отсчет,\r\n и шаг, задается при создании генератора. Шаг можно не указывать, тогда он будет равен одному.\r\n Начальное значение по умолчанию равно 0. Генераторов можно создать сколько угодно.*/\n// function sequence(start, step) {\n//     start = start || 0;\n//     step = step || 1;\n//     let defaultStart = start;\n//     return () => {\n//         let result = defaultStart;\n//         defaultStart += step;\n//         return result;\n//     }\n// }\n//\n// let gen = sequence(10, 1);\n// console.log(gen());\n// console.log(gen());\n\n/*Задание 17\r\nТакже, нужна функция take(gen, x) которая вызвает функцию gen заданное число (x) раз\r\nи возвращает массив с результатами вызовов.*/\n// function sequence(start, step) {\n//     start = start || 0;\n//     step = step || 1;\n//     let defaultStart = start;\n//     return () => {\n//         let result = defaultStart;\n//         defaultStart += step;\n//         return result;\n//     }\n// }\n//\n// let gen = sequence(10, 1);\n// console.log(gen());\n// console.log(gen());\n//\n// function take(gen, x) {\n//     let arr = [];\n//     for (let i = 0; i < x; i++){\n//         arr.push(gen());\n//     }\n//     return arr;\n// }\n// let gen2 = sequence(0 , 2);\n// console.log(take(gen2, 5));\n\n/*Задание 18\r\nНапиши функцию map(fn, array), которая принимает на вход функцию и массив, и обрабатывает\r\nкаждый элемент массива этой функцией, возвращая новый массив. Пример:\r\n*/\n// function square(x) {\n//     return x * x;\n// }\n// function map(fn, array) {\n//     let newArr = [];\n//     if (array.length === 0){\n//         return newArr;\n//     }else {\n//         for (let i = 0; i < array.length; i++) {\n//             newArr.push(fn(array[i]));\n//         }\n//         return newArr;\n//     }\n//\n// }\n// let arr = [1, 2, 3, 4, 5];\n// console.log(map(square, arr));\n// console.log(arr);\n\n/*Задание 19\r\nНапиши функцию fmap(a, gen), которая принимает на вход 2 функции, a и gen, где gen — функция-генератор вроде\r\nтой, что была в 17 задании. fmap возвращает новую функцию-генератор, которая при каждом вызове берет следующее\r\nзначение из gen и пропускает его через функцию a. Пример:*/\n// function square(x) {\n//     return x * x;\n// }\n// function sequence(start, step) {\n//     start = start || 0;\n//     step = step || 1;\n//     let defaultStart = start;\n//     return () => {\n//         let result = defaultStart;\n//         defaultStart += step;\n//         return result;\n//     }\n// }\n//\n//\n// function fmap(a, gen) {\n//\n//     return () => {\n//         // let res = [];\n//         // res.push(gen2());\n//\n//         let args = arguments.length;\n//         let arr = [];\n//         for (let i = 0; i < args; i++){\n//             arr[i] = arguments[i];\n//         }\n//         let x = a(gen2.apply(null, arr))\n//         return x;\n//     }\n// }\n// let gen2 = sequence(1, 1);\n// let squareGen = fmap(square, gen2);\n// console.log(squareGen());\n// console.log(squareGen());\n// console.log(squareGen());\n//\n// function add(a, b) {\n//     return a + b;\n// }\n//\n// let sum = fmap(square, add)\n// console.log(sum(2, 3));\n// console.log(sum(5, 7));\n\n/*Задание 20\r\nНаписать функцию filter, которая принимает функцию-предикат и массив.\r\nВозвращает она массив значений,\r\nдля которых предикат вернет true.*/\n// function isEven(x) {\n//     return x % 2 === 0;\n// }\n// let input = [1, 2, 3, 4, 5, 6];\n//\n// function filter(input, isEven) {\n//     let result = [];\n//     for (let i = 0; i < input.length; i++){\n//         if (isEven(input[i]))\n//             result.push(input[i]);\n//     }\n//     return result;\n// }\n// console.log(filter(input, isEven));\n\n/*1. Задача (Рекурсия)\r\nДано натуральное число n. Выведите все числа от 1 до n.\r\n*/\n// function rec(n) {\n//     if (n === 1){\n//         return n;\n//     }\n//     console.log(rec(n - 1));\n//     return n;\n// }\n//\n// console.log(rec(5));\n\n/*2. Задача (Рекурсия)\r\nДаны два целых числа A и В (каждое в отдельной строке). Выведите все числа от A до B включительно,\r\nв порядке возрастания, если A < B, или в порядке убывания в противном случае.\r\n*/\n// const a = 15;\n// const b = 10;\n// function recA(a, b) {\n//     if (a === b) {\n//         return a;\n//     }else {\n//         if (a < b) {\n//             console.log(a);\n//             return recA(a + 1, b);\n//         }else{\n//             console.log(a);\n//             return recA(a - 1, b);\n//         }\n//\n//     }\n// }\n// recA(a,b);\n\n/*3. Задача (Рекурсия)\r\nДано натуральное число N. Вычислите сумму его цифр.\r\nПри решении этой задачи нельзя использовать строки, списки, массивы (ну и циклы, разумеется).\r\n*/\n// let number = 12345;\n// let current = 0;\n// let sum = 0;\n//\n// function recSum(n) {\n//     if (n === 0){\n//         return n;\n//     }else{\n//         current = n % 10;\n//         n = (n - current) / 10;\n//         sum += current;\n//         return recSum(n)\n//     }\n// }\n// recSum(number);\n//\n// console.log(sum);\n\n/*4. Задача (Рекурсия)\r\nДано натуральное число N. Выведите все его цифры по одной,\r\nв обратном порядке, разделяя их пробелами или новыми строками.\r\nПри решении этой задачи нельзя использовать строки, списки,\r\nмассивы (ну и циклы, разумеется). Разрешена только рекурсия и\r\nцелочисленная арифметика.\r\n*/\n// let number = 123543;\n// let current = 0;\n//\n// function recOut(n) {\n//     if ( n === 0){\n//         return n;\n//     }else{\n//         current = n % 10;\n//         n = (n - current) / 10;\n//         console.log(current);\n//         return recOut(n);\n//     }\n// }\n// recOut(number);\n\n/* Задача 6 и 8 ООП.\r\nРеализуйте класс Worker (Работник), который будет иметь следующие свойства:\r\nname (имя), surname (фамилия), rate (ставка за день работы),\r\ndays (количество отработанных дней). Также класс должен иметь\r\nметод getSalary(), который будет выводить зарплату работника.\r\nЗарплата - это произведение (умножение) ставки rate на количество\r\nотработанных дней days.Модифицируйте класс Worker из предыдущей задачи\r\nследующим образом: для свойства\r\nrate и для свойства days сделайте еще и методы-сеттеры.\r\n*/\n// class Worker {\n//     constructor(name, surname, rate, days) {\n//         this.name = name;\n//         this.surname = surname;\n//         this.rate = rate;\n//         this.days = days;\n//     }\n//\n//     getSalary(){\n//         return this.rate * this.days;\n//     }\n//     set setRate(rate){\n//         this.rate = rate;\n//     }\n//     set setDays(days){\n//         this.days = days;\n//     }\n//\n// }\n//\n// let worker = new Worker('Ivan', 'Ivanov', 10, 31);\n//\n// console.log(worker.name);\n// console.log(worker.surname);\n// console.log(worker.rate);\n// console.log(worker.days);\n// console.log(worker.getSalary());\n// console.log(worker.setRate = 15);\n// console.log(worker.setDays = 20);\n//console.log(worker.getSalary());\n\n/*9. Задача (ООП)\r\nРеализуйте класс MyString, который будет иметь следующие методы: метод reverse(), который параметром принимает строку, а возвращает ее в перевернутом виде, метод ucFirst(), который параметром принимает строку, а возвращает эту же строку, сделав ее первую букву заглавной и метод ucWords, который принимает строку и делает заглавной первую букву каждого слова этой строки.\r\n*/\n// class MyString {\n//     constructor(){\n//\n//     }\n//     reverse(str){\n//         return str.split(\"\").reverse().join(\"\");\n//     }\n//     ucFirst(str){\n//         let firstChar = str.slice(0, 1).toUpperCase();\n//         let result = firstChar + str.slice(1, str.length);\n//         return result;\n//     }\n//     ucWords(str){\n//         let arrayWords = str.split(\" \"); //разбиваем строку на массив\n//         let result = \"\";  // В будущем запишем результат\n//         for (let i = 0; i < arrayWords.length; i++) {\n//             let word = arrayWords[i];\n//             let firstChar = word.slice(0, 1).toUpperCase();\n//             let otherSentence = word.slice(1, word.length);\n//             result += firstChar + otherSentence + \" \";\n//         }\n//     return result;\n//\n//         return result;\n//     }\n//\n// }\n// const str = new MyString();\n//\n// console.log(str.reverse(\"abcde\"));\n// console.log(str.ucFirst(\"abcde\"));\n// console.log(str.ucWords(\"abcde abcde abcde\"));\n\n/*10. Задача (ООП)\r\nРеализуйте класс Student (Студент), который будет наследовать от класса User.\r\nЭтот класс должен иметь следующие свойства: name (имя, наследуется от User),\r\nsurname (фамилия, наследуется от User), year (год поступления в вуз).\r\nКласс должен иметь метод getFullName() (наследуется от User),\r\nс помощью которого можно вывести одновременно имя и фамилию студента.\r\nТакже класс должен иметь метод getCourse(), который будет выводить текущий\r\nкурс студента (от 1 до 5). Курс вычисляется так: нужно от текущего года\r\nотнять год поступления в вуз. Текущий год получите самостоятельно.\r\n*/\n// class User {\n//     constructor(name, surname, year) {\n//         this.name = name;\n//         this.surname = surname;\n//         this.year = year;\n//\n//     }\n//     getFullName(){\n//         return `${this.name} ${this.surname}`\n//     }\n// }\n// function getYear(){\n//     let year = new Date();\n//     return year.getFullYear();\n// }\n// class Student extends User{\n//     constructor(name, surname, year) {\n//         super(name, surname, year);\n//     }\n//     getCourse(){\n//         return getYear() - this.year;\n//     }\n// }\n//\n// let student = new Student('Pasha', 'Pavlov', 2015);\n// console.log(student.name);\n// console.log(student.surname);\n// console.log(student.getFullName());\n// console.log(student.year);\n// console.log(student.getCourse());\n\n/*12. Задача (функции работы с массивами)\r\nДаны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Объедините их вместе.\r\n*/\n// function joinArr() {\n//     let a = ['a', 'b', 'c'];\n//     let b = [1, 2, 3];\n//     let newArr = [];\n//     newArr = a.concat(b);\n//     return newArr;\n// }\n//\n// console.log(joinArr());\n\n/*13. Задача (функции работы с массивами)\r\nДан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3.*/\n// let a = ['a', 'b', 'c'];\n// function addToArr() {\n//     for (let i = 1; i <= 3; i++){\n//         a.push(i);\n//     }\n//     return a;\n// }\n//\n// console.log(addToArr());\n\n/*14. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6. */\n// let a = ['a', 'b', 'c'];\n// function addToArr() {\n//     for (let i = 6; i >= 4; i--){\n//         a.unshift(i);\n//     }\n//     return a;\n// }\n//\n// console.log(addToArr());\n\n/*15. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3, 4, 5]. С помощью метода slice\r\nзапишите в новый элементы [1, 2, 3].*/\n// let arr = [1, 2, 3, 4, 5];\n//\n// function myArray(arr) {\n//     let newArr = [];\n//     for (let i = 0; i < arr.length; i++){\n//         newArr = arr.slice(0, 3);\n//     }\n//     return newArr;\n// }\n// console.log(myArray(arr));\n\n/*16. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3, 4, 5]. С помощью метода slice\r\nзапишите в новый элементы [4, 5].*/\n// let arr = [1, 2, 3, 4, 5];\n// //\n// // function myArray2(arr) {\n// //     let newArr = [];\n// //     for (let i = 0; i < arr.length; i++){\n// //         newArr = arr.slice(3, 5);\n// //     }\n// //     return newArr;\n// // }\n// //\n// // console.log(myArray2(arr));\n\n/*17. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3, 4, 5]. С помощью метода splice\r\nпреобразуйте массив в [1, 4, 5].*/\n// let arr = [1, 2, 3, 4, 5];\n// function proArr(arr) {\n//     arr.splice(1,2);\n//     return arr;\n// }\n//\n// console.log(proArr(arr));\n\n/*18. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3, 4, 5]. С помощью метода splice\r\nзапишите в новый массив элементы [2, 3, 4].*/\n// let arr = [1, 2, 3, 4, 5];\n// function proArr(arr) {\n//     let newArr = [];\n//\n//     arr.splice(0, 1);\n//     arr.splice(3, 1);\n//     for (let i = 0; i < arr.length; i++){\n//         newArr.push(arr[i]);\n//\n//     }\n//     return newArr;\n// }\n// console.log(proArr(arr));\n\n/*19. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3, 4, 5]. С помощью метода splice\r\nсделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5]*/\n// function addToArray() {\n//     let arr = [1, 2, 3, 4, 5];\n//     arr.splice(3,0, 'a', 'b', 'c');\n//     return arr;\n// }\n//\n// console.log(addToArray());\n\n/*20. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3, 4, 5]. С помощью метода splice\r\nсделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].*/\n// function addToArray2() {\n// //     let arr = [1, 2, 3, 4, 5];\n// //     arr.splice(1, 0, 'a', 'b');\n// //     arr.splice(6, 0, 'c');\n// //     arr.splice(8, 0 , 'e');\n// //     return arr;\n// // }\n// //\n// // console.log(addToArray2());\n\n/*21. Задача (функции работы с массивами)\r\nДан объект {js:'tгest', jq: 'hello', css: 'world'}.\r\nПолучите массив ео ключей.*/\n// const myObject = {\n//     js: \"test\",\n//     jq: 'hello',\n//     css: 'word'\n// }\n// function getKeys(obj) {\n//     return Object.keys(obj);\n// }\n//\n// console.log(getKeys(myObject));"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"js/script.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"js/script.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":0},"source":"js/script.js","original":{"line":4,"column":0}},{"generated":{"line":4,"column":0},"source":"js/script.js","original":{"line":5,"column":0}},{"generated":{"line":5,"column":0},"source":"js/script.js","original":{"line":6,"column":0}},{"generated":{"line":6,"column":0},"source":"js/script.js","original":{"line":7,"column":0}},{"generated":{"line":7,"column":0},"source":"js/script.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"js/script.js","original":{"line":10,"column":0}},{"generated":{"line":10,"column":0},"source":"js/script.js","original":{"line":11,"column":0}},{"generated":{"line":11,"column":0},"source":"js/script.js","original":{"line":12,"column":0}},{"generated":{"line":12,"column":0},"source":"js/script.js","original":{"line":13,"column":0}},{"generated":{"line":13,"column":0},"source":"js/script.js","original":{"line":14,"column":0}},{"generated":{"line":14,"column":0},"source":"js/script.js","original":{"line":15,"column":0}},{"generated":{"line":15,"column":0},"source":"js/script.js","original":{"line":16,"column":0}},{"generated":{"line":16,"column":0},"source":"js/script.js","original":{"line":17,"column":0}},{"generated":{"line":17,"column":0},"source":"js/script.js","original":{"line":18,"column":0}},{"generated":{"line":18,"column":0},"source":"js/script.js","original":{"line":19,"column":0}},{"generated":{"line":19,"column":0},"source":"js/script.js","original":{"line":20,"column":0}},{"generated":{"line":20,"column":0},"source":"js/script.js","original":{"line":21,"column":0}},{"generated":{"line":21,"column":0},"source":"js/script.js","original":{"line":22,"column":0}},{"generated":{"line":22,"column":0},"source":"js/script.js","original":{"line":23,"column":0}},{"generated":{"line":23,"column":0},"source":"js/script.js","original":{"line":25,"column":0}},{"generated":{"line":24,"column":0},"source":"js/script.js","original":{"line":27,"column":0}},{"generated":{"line":25,"column":0},"source":"js/script.js","original":{"line":28,"column":0}},{"generated":{"line":26,"column":0},"source":"js/script.js","original":{"line":29,"column":0}},{"generated":{"line":27,"column":0},"source":"js/script.js","original":{"line":30,"column":0}},{"generated":{"line":28,"column":0},"source":"js/script.js","original":{"line":31,"column":0}},{"generated":{"line":29,"column":0},"source":"js/script.js","original":{"line":32,"column":0}},{"generated":{"line":30,"column":0},"source":"js/script.js","original":{"line":33,"column":0}},{"generated":{"line":31,"column":0},"source":"js/script.js","original":{"line":34,"column":0}},{"generated":{"line":32,"column":0},"source":"js/script.js","original":{"line":35,"column":0}},{"generated":{"line":33,"column":0},"source":"js/script.js","original":{"line":36,"column":0}},{"generated":{"line":34,"column":0},"source":"js/script.js","original":{"line":37,"column":0}},{"generated":{"line":35,"column":0},"source":"js/script.js","original":{"line":38,"column":0}},{"generated":{"line":36,"column":0},"source":"js/script.js","original":{"line":40,"column":0}},{"generated":{"line":37,"column":0},"source":"js/script.js","original":{"line":42,"column":0}},{"generated":{"line":38,"column":0},"source":"js/script.js","original":{"line":43,"column":0}},{"generated":{"line":39,"column":0},"source":"js/script.js","original":{"line":44,"column":0}},{"generated":{"line":40,"column":0},"source":"js/script.js","original":{"line":45,"column":0}},{"generated":{"line":41,"column":0},"source":"js/script.js","original":{"line":46,"column":0}},{"generated":{"line":42,"column":0},"source":"js/script.js","original":{"line":47,"column":0}},{"generated":{"line":43,"column":0},"source":"js/script.js","original":{"line":48,"column":0}},{"generated":{"line":44,"column":0},"source":"js/script.js","original":{"line":49,"column":0}},{"generated":{"line":45,"column":0},"source":"js/script.js","original":{"line":50,"column":0}},{"generated":{"line":46,"column":0},"source":"js/script.js","original":{"line":51,"column":0}},{"generated":{"line":47,"column":0},"source":"js/script.js","original":{"line":52,"column":0}},{"generated":{"line":48,"column":0},"source":"js/script.js","original":{"line":53,"column":0}},{"generated":{"line":49,"column":0},"source":"js/script.js","original":{"line":54,"column":0}},{"generated":{"line":50,"column":0},"source":"js/script.js","original":{"line":55,"column":0}},{"generated":{"line":52,"column":0},"source":"js/script.js","original":{"line":58,"column":0}},{"generated":{"line":57,"column":0},"source":"js/script.js","original":{"line":63,"column":0}},{"generated":{"line":58,"column":0},"source":"js/script.js","original":{"line":65,"column":0}},{"generated":{"line":59,"column":0},"source":"js/script.js","original":{"line":66,"column":0}},{"generated":{"line":60,"column":0},"source":"js/script.js","original":{"line":67,"column":0}},{"generated":{"line":61,"column":0},"source":"js/script.js","original":{"line":68,"column":0}},{"generated":{"line":62,"column":0},"source":"js/script.js","original":{"line":69,"column":0}},{"generated":{"line":63,"column":0},"source":"js/script.js","original":{"line":70,"column":0}},{"generated":{"line":64,"column":0},"source":"js/script.js","original":{"line":71,"column":0}},{"generated":{"line":65,"column":0},"source":"js/script.js","original":{"line":72,"column":0}},{"generated":{"line":66,"column":0},"source":"js/script.js","original":{"line":73,"column":0}},{"generated":{"line":67,"column":0},"source":"js/script.js","original":{"line":74,"column":0}},{"generated":{"line":68,"column":0},"source":"js/script.js","original":{"line":75,"column":0}},{"generated":{"line":69,"column":0},"source":"js/script.js","original":{"line":76,"column":0}},{"generated":{"line":70,"column":0},"source":"js/script.js","original":{"line":77,"column":0}},{"generated":{"line":71,"column":0},"source":"js/script.js","original":{"line":78,"column":0}},{"generated":{"line":72,"column":0},"source":"js/script.js","original":{"line":79,"column":0}},{"generated":{"line":73,"column":0},"source":"js/script.js","original":{"line":80,"column":0}},{"generated":{"line":74,"column":0},"source":"js/script.js","original":{"line":81,"column":0}},{"generated":{"line":76,"column":0},"source":"js/script.js","original":{"line":83,"column":0}},{"generated":{"line":79,"column":0},"source":"js/script.js","original":{"line":86,"column":0}},{"generated":{"line":80,"column":0},"source":"js/script.js","original":{"line":87,"column":0}},{"generated":{"line":81,"column":0},"source":"js/script.js","original":{"line":88,"column":0}},{"generated":{"line":82,"column":0},"source":"js/script.js","original":{"line":89,"column":0}},{"generated":{"line":84,"column":0},"source":"js/script.js","original":{"line":91,"column":0}},{"generated":{"line":87,"column":0},"source":"js/script.js","original":{"line":95,"column":0}},{"generated":{"line":88,"column":0},"source":"js/script.js","original":{"line":96,"column":0}},{"generated":{"line":89,"column":0},"source":"js/script.js","original":{"line":97,"column":0}},{"generated":{"line":90,"column":0},"source":"js/script.js","original":{"line":98,"column":0}},{"generated":{"line":91,"column":0},"source":"js/script.js","original":{"line":99,"column":0}},{"generated":{"line":92,"column":0},"source":"js/script.js","original":{"line":100,"column":0}},{"generated":{"line":94,"column":0},"source":"js/script.js","original":{"line":102,"column":0}},{"generated":{"line":99,"column":0},"source":"js/script.js","original":{"line":108,"column":0}},{"generated":{"line":100,"column":0},"source":"js/script.js","original":{"line":110,"column":0}},{"generated":{"line":101,"column":0},"source":"js/script.js","original":{"line":111,"column":0}},{"generated":{"line":102,"column":0},"source":"js/script.js","original":{"line":112,"column":0}},{"generated":{"line":103,"column":0},"source":"js/script.js","original":{"line":113,"column":0}},{"generated":{"line":104,"column":0},"source":"js/script.js","original":{"line":114,"column":0}},{"generated":{"line":105,"column":0},"source":"js/script.js","original":{"line":115,"column":0}},{"generated":{"line":106,"column":0},"source":"js/script.js","original":{"line":116,"column":0}},{"generated":{"line":107,"column":0},"source":"js/script.js","original":{"line":117,"column":0}},{"generated":{"line":108,"column":0},"source":"js/script.js","original":{"line":118,"column":0}},{"generated":{"line":110,"column":0},"source":"js/script.js","original":{"line":120,"column":0}},{"generated":{"line":114,"column":0},"source":"js/script.js","original":{"line":125,"column":0}},{"generated":{"line":115,"column":0},"source":"js/script.js","original":{"line":126,"column":0}},{"generated":{"line":116,"column":0},"source":"js/script.js","original":{"line":128,"column":0}},{"generated":{"line":117,"column":0},"source":"js/script.js","original":{"line":129,"column":0}},{"generated":{"line":118,"column":0},"source":"js/script.js","original":{"line":130,"column":0}},{"generated":{"line":119,"column":0},"source":"js/script.js","original":{"line":131,"column":0}},{"generated":{"line":120,"column":0},"source":"js/script.js","original":{"line":132,"column":0}},{"generated":{"line":121,"column":0},"source":"js/script.js","original":{"line":133,"column":0}},{"generated":{"line":122,"column":0},"source":"js/script.js","original":{"line":134,"column":0}},{"generated":{"line":124,"column":0},"source":"js/script.js","original":{"line":136,"column":0}},{"generated":{"line":128,"column":0},"source":"js/script.js","original":{"line":140,"column":0}},{"generated":{"line":129,"column":0},"source":"js/script.js","original":{"line":141,"column":0}},{"generated":{"line":130,"column":0},"source":"js/script.js","original":{"line":142,"column":0}},{"generated":{"line":131,"column":0},"source":"js/script.js","original":{"line":143,"column":0}},{"generated":{"line":132,"column":0},"source":"js/script.js","original":{"line":144,"column":0}},{"generated":{"line":133,"column":0},"source":"js/script.js","original":{"line":145,"column":0}},{"generated":{"line":134,"column":0},"source":"js/script.js","original":{"line":146,"column":0}},{"generated":{"line":136,"column":0},"source":"js/script.js","original":{"line":148,"column":0}},{"generated":{"line":139,"column":0},"source":"js/script.js","original":{"line":152,"column":0}},{"generated":{"line":140,"column":0},"source":"js/script.js","original":{"line":153,"column":0}},{"generated":{"line":141,"column":0},"source":"js/script.js","original":{"line":154,"column":0}},{"generated":{"line":142,"column":0},"source":"js/script.js","original":{"line":155,"column":0}},{"generated":{"line":143,"column":0},"source":"js/script.js","original":{"line":156,"column":0}},{"generated":{"line":144,"column":0},"source":"js/script.js","original":{"line":157,"column":0}},{"generated":{"line":145,"column":0},"source":"js/script.js","original":{"line":158,"column":0}},{"generated":{"line":146,"column":0},"source":"js/script.js","original":{"line":159,"column":0}},{"generated":{"line":147,"column":0},"source":"js/script.js","original":{"line":160,"column":0}},{"generated":{"line":148,"column":0},"source":"js/script.js","original":{"line":161,"column":0}},{"generated":{"line":149,"column":0},"source":"js/script.js","original":{"line":162,"column":0}},{"generated":{"line":150,"column":0},"source":"js/script.js","original":{"line":163,"column":0}},{"generated":{"line":152,"column":0},"source":"js/script.js","original":{"line":165,"column":0}},{"generated":{"line":155,"column":0},"source":"js/script.js","original":{"line":169,"column":0}},{"generated":{"line":156,"column":0},"source":"js/script.js","original":{"line":170,"column":0}},{"generated":{"line":157,"column":0},"source":"js/script.js","original":{"line":171,"column":0}},{"generated":{"line":158,"column":0},"source":"js/script.js","original":{"line":172,"column":0}},{"generated":{"line":159,"column":0},"source":"js/script.js","original":{"line":173,"column":0}},{"generated":{"line":160,"column":0},"source":"js/script.js","original":{"line":174,"column":0}},{"generated":{"line":161,"column":0},"source":"js/script.js","original":{"line":175,"column":0}},{"generated":{"line":162,"column":0},"source":"js/script.js","original":{"line":176,"column":0}},{"generated":{"line":163,"column":0},"source":"js/script.js","original":{"line":177,"column":0}},{"generated":{"line":164,"column":0},"source":"js/script.js","original":{"line":178,"column":0}},{"generated":{"line":165,"column":0},"source":"js/script.js","original":{"line":179,"column":0}},{"generated":{"line":166,"column":0},"source":"js/script.js","original":{"line":180,"column":0}},{"generated":{"line":167,"column":0},"source":"js/script.js","original":{"line":181,"column":0}},{"generated":{"line":168,"column":0},"source":"js/script.js","original":{"line":182,"column":0}},{"generated":{"line":169,"column":0},"source":"js/script.js","original":{"line":183,"column":0}},{"generated":{"line":170,"column":0},"source":"js/script.js","original":{"line":184,"column":0}},{"generated":{"line":171,"column":0},"source":"js/script.js","original":{"line":185,"column":0}},{"generated":{"line":173,"column":0},"source":"js/script.js","original":{"line":189,"column":0}},{"generated":{"line":176,"column":0},"source":"js/script.js","original":{"line":192,"column":0}},{"generated":{"line":177,"column":0},"source":"js/script.js","original":{"line":193,"column":0}},{"generated":{"line":178,"column":0},"source":"js/script.js","original":{"line":194,"column":0}},{"generated":{"line":180,"column":0},"source":"js/script.js","original":{"line":197,"column":0}},{"generated":{"line":183,"column":0},"source":"js/script.js","original":{"line":201,"column":0}},{"generated":{"line":184,"column":0},"source":"js/script.js","original":{"line":202,"column":0}},{"generated":{"line":185,"column":0},"source":"js/script.js","original":{"line":203,"column":0}},{"generated":{"line":187,"column":0},"source":"js/script.js","original":{"line":205,"column":0}},{"generated":{"line":190,"column":0},"source":"js/script.js","original":{"line":209,"column":0}},{"generated":{"line":191,"column":0},"source":"js/script.js","original":{"line":210,"column":0}},{"generated":{"line":192,"column":0},"source":"js/script.js","original":{"line":211,"column":0}},{"generated":{"line":194,"column":0},"source":"js/script.js","original":{"line":213,"column":0}},{"generated":{"line":197,"column":0},"source":"js/script.js","original":{"line":217,"column":0}},{"generated":{"line":198,"column":0},"source":"js/script.js","original":{"line":218,"column":0}},{"generated":{"line":199,"column":0},"source":"js/script.js","original":{"line":219,"column":0}},{"generated":{"line":201,"column":0},"source":"js/script.js","original":{"line":221,"column":0}},{"generated":{"line":204,"column":0},"source":"js/script.js","original":{"line":225,"column":0}},{"generated":{"line":205,"column":0},"source":"js/script.js","original":{"line":226,"column":0}},{"generated":{"line":206,"column":0},"source":"js/script.js","original":{"line":227,"column":0}},{"generated":{"line":208,"column":0},"source":"js/script.js","original":{"line":229,"column":0}},{"generated":{"line":211,"column":0},"source":"js/script.js","original":{"line":233,"column":0}},{"generated":{"line":212,"column":0},"source":"js/script.js","original":{"line":234,"column":0}},{"generated":{"line":213,"column":0},"source":"js/script.js","original":{"line":235,"column":0}},{"generated":{"line":214,"column":0},"source":"js/script.js","original":{"line":236,"column":0}},{"generated":{"line":215,"column":0},"source":"js/script.js","original":{"line":237,"column":0}},{"generated":{"line":217,"column":0},"source":"js/script.js","original":{"line":239,"column":0}},{"generated":{"line":220,"column":0},"source":"js/script.js","original":{"line":242,"column":0}},{"generated":{"line":221,"column":0},"source":"js/script.js","original":{"line":243,"column":0}},{"generated":{"line":222,"column":0},"source":"js/script.js","original":{"line":244,"column":0}},{"generated":{"line":223,"column":0},"source":"js/script.js","original":{"line":245,"column":0}},{"generated":{"line":224,"column":0},"source":"js/script.js","original":{"line":246,"column":0}},{"generated":{"line":226,"column":0},"source":"js/script.js","original":{"line":248,"column":0}},{"generated":{"line":229,"column":0},"source":"js/script.js","original":{"line":251,"column":0}},{"generated":{"line":230,"column":0},"source":"js/script.js","original":{"line":252,"column":0}},{"generated":{"line":231,"column":0},"source":"js/script.js","original":{"line":253,"column":0}},{"generated":{"line":232,"column":0},"source":"js/script.js","original":{"line":254,"column":0}},{"generated":{"line":233,"column":0},"source":"js/script.js","original":{"line":255,"column":0}},{"generated":{"line":235,"column":0},"source":"js/script.js","original":{"line":257,"column":0}},{"generated":{"line":238,"column":0},"source":"js/script.js","original":{"line":261,"column":0}},{"generated":{"line":239,"column":0},"source":"js/script.js","original":{"line":262,"column":0}},{"generated":{"line":240,"column":0},"source":"js/script.js","original":{"line":263,"column":0}},{"generated":{"line":241,"column":0},"source":"js/script.js","original":{"line":264,"column":0}},{"generated":{"line":242,"column":0},"source":"js/script.js","original":{"line":265,"column":0}},{"generated":{"line":244,"column":0},"source":"js/script.js","original":{"line":268,"column":0}},{"generated":{"line":248,"column":0},"source":"js/script.js","original":{"line":274,"column":0}},{"generated":{"line":249,"column":0},"source":"js/script.js","original":{"line":275,"column":0}},{"generated":{"line":250,"column":0},"source":"js/script.js","original":{"line":276,"column":0}},{"generated":{"line":251,"column":0},"source":"js/script.js","original":{"line":277,"column":0}},{"generated":{"line":252,"column":0},"source":"js/script.js","original":{"line":278,"column":0}},{"generated":{"line":253,"column":0},"source":"js/script.js","original":{"line":279,"column":0}},{"generated":{"line":254,"column":0},"source":"js/script.js","original":{"line":280,"column":0}},{"generated":{"line":255,"column":0},"source":"js/script.js","original":{"line":281,"column":0}},{"generated":{"line":256,"column":0},"source":"js/script.js","original":{"line":282,"column":0}},{"generated":{"line":258,"column":0},"source":"js/script.js","original":{"line":284,"column":0}},{"generated":{"line":260,"column":0},"source":"js/script.js","original":{"line":287,"column":0}},{"generated":{"line":261,"column":0},"source":"js/script.js","original":{"line":288,"column":0}},{"generated":{"line":262,"column":0},"source":"js/script.js","original":{"line":289,"column":0}},{"generated":{"line":263,"column":0},"source":"js/script.js","original":{"line":290,"column":0}},{"generated":{"line":264,"column":0},"source":"js/script.js","original":{"line":291,"column":0}},{"generated":{"line":265,"column":0},"source":"js/script.js","original":{"line":292,"column":0}},{"generated":{"line":266,"column":0},"source":"js/script.js","original":{"line":293,"column":0}},{"generated":{"line":267,"column":0},"source":"js/script.js","original":{"line":294,"column":0}},{"generated":{"line":268,"column":0},"source":"js/script.js","original":{"line":295,"column":0}},{"generated":{"line":269,"column":0},"source":"js/script.js","original":{"line":296,"column":0}},{"generated":{"line":270,"column":0},"source":"js/script.js","original":{"line":297,"column":0}},{"generated":{"line":271,"column":0},"source":"js/script.js","original":{"line":298,"column":0}},{"generated":{"line":272,"column":0},"source":"js/script.js","original":{"line":299,"column":0}},{"generated":{"line":273,"column":0},"source":"js/script.js","original":{"line":300,"column":0}},{"generated":{"line":274,"column":0},"source":"js/script.js","original":{"line":301,"column":0}},{"generated":{"line":276,"column":0},"source":"js/script.js","original":{"line":302,"column":0}},{"generated":{"line":280,"column":0},"source":"js/script.js","original":{"line":306,"column":0}},{"generated":{"line":281,"column":0},"source":"js/script.js","original":{"line":307,"column":0}},{"generated":{"line":282,"column":0},"source":"js/script.js","original":{"line":308,"column":0}},{"generated":{"line":283,"column":0},"source":"js/script.js","original":{"line":309,"column":0}},{"generated":{"line":284,"column":0},"source":"js/script.js","original":{"line":310,"column":0}},{"generated":{"line":285,"column":0},"source":"js/script.js","original":{"line":311,"column":0}},{"generated":{"line":286,"column":0},"source":"js/script.js","original":{"line":312,"column":0}},{"generated":{"line":287,"column":0},"source":"js/script.js","original":{"line":313,"column":0}},{"generated":{"line":288,"column":0},"source":"js/script.js","original":{"line":314,"column":0}},{"generated":{"line":289,"column":0},"source":"js/script.js","original":{"line":315,"column":0}},{"generated":{"line":290,"column":0},"source":"js/script.js","original":{"line":316,"column":0}},{"generated":{"line":291,"column":0},"source":"js/script.js","original":{"line":317,"column":0}},{"generated":{"line":292,"column":0},"source":"js/script.js","original":{"line":318,"column":0}},{"generated":{"line":293,"column":0},"source":"js/script.js","original":{"line":319,"column":0}},{"generated":{"line":294,"column":0},"source":"js/script.js","original":{"line":320,"column":0}},{"generated":{"line":295,"column":0},"source":"js/script.js","original":{"line":321,"column":0}},{"generated":{"line":296,"column":0},"source":"js/script.js","original":{"line":322,"column":0}},{"generated":{"line":297,"column":0},"source":"js/script.js","original":{"line":323,"column":0}},{"generated":{"line":299,"column":0},"source":"js/script.js","original":{"line":325,"column":0}},{"generated":{"line":302,"column":0},"source":"js/script.js","original":{"line":328,"column":0}},{"generated":{"line":303,"column":0},"source":"js/script.js","original":{"line":329,"column":0}},{"generated":{"line":304,"column":0},"source":"js/script.js","original":{"line":330,"column":0}},{"generated":{"line":305,"column":0},"source":"js/script.js","original":{"line":331,"column":0}},{"generated":{"line":306,"column":0},"source":"js/script.js","original":{"line":332,"column":0}},{"generated":{"line":308,"column":0},"source":"js/script.js","original":{"line":334,"column":0}},{"generated":{"line":311,"column":0},"source":"js/script.js","original":{"line":338,"column":0}},{"generated":{"line":312,"column":0},"source":"js/script.js","original":{"line":339,"column":0}},{"generated":{"line":313,"column":0},"source":"js/script.js","original":{"line":340,"column":0}},{"generated":{"line":314,"column":0},"source":"js/script.js","original":{"line":341,"column":0}},{"generated":{"line":315,"column":0},"source":"js/script.js","original":{"line":342,"column":0}},{"generated":{"line":316,"column":0},"source":"js/script.js","original":{"line":343,"column":0}},{"generated":{"line":317,"column":0},"source":"js/script.js","original":{"line":344,"column":0}},{"generated":{"line":318,"column":0},"source":"js/script.js","original":{"line":345,"column":0}},{"generated":{"line":320,"column":0},"source":"js/script.js","original":{"line":347,"column":0}},{"generated":{"line":323,"column":0},"source":"js/script.js","original":{"line":351,"column":0}},{"generated":{"line":324,"column":0},"source":"js/script.js","original":{"line":352,"column":0}},{"generated":{"line":325,"column":0},"source":"js/script.js","original":{"line":353,"column":0}},{"generated":{"line":326,"column":0},"source":"js/script.js","original":{"line":354,"column":0}},{"generated":{"line":327,"column":0},"source":"js/script.js","original":{"line":355,"column":0}},{"generated":{"line":328,"column":0},"source":"js/script.js","original":{"line":356,"column":0}},{"generated":{"line":329,"column":0},"source":"js/script.js","original":{"line":357,"column":0}},{"generated":{"line":330,"column":0},"source":"js/script.js","original":{"line":358,"column":0}},{"generated":{"line":332,"column":0},"source":"js/script.js","original":{"line":360,"column":0}},{"generated":{"line":335,"column":0},"source":"js/script.js","original":{"line":364,"column":0}},{"generated":{"line":336,"column":0},"source":"js/script.js","original":{"line":365,"column":0}},{"generated":{"line":337,"column":0},"source":"js/script.js","original":{"line":366,"column":0}},{"generated":{"line":338,"column":0},"source":"js/script.js","original":{"line":367,"column":0}},{"generated":{"line":339,"column":0},"source":"js/script.js","original":{"line":368,"column":0}},{"generated":{"line":340,"column":0},"source":"js/script.js","original":{"line":369,"column":0}},{"generated":{"line":341,"column":0},"source":"js/script.js","original":{"line":370,"column":0}},{"generated":{"line":342,"column":0},"source":"js/script.js","original":{"line":371,"column":0}},{"generated":{"line":343,"column":0},"source":"js/script.js","original":{"line":372,"column":0}},{"generated":{"line":345,"column":0},"source":"js/script.js","original":{"line":375,"column":0}},{"generated":{"line":348,"column":0},"source":"js/script.js","original":{"line":379,"column":0}},{"generated":{"line":349,"column":0},"source":"js/script.js","original":{"line":380,"column":0}},{"generated":{"line":350,"column":0},"source":"js/script.js","original":{"line":381,"column":0}},{"generated":{"line":351,"column":0},"source":"js/script.js","original":{"line":382,"column":0}},{"generated":{"line":352,"column":0},"source":"js/script.js","original":{"line":383,"column":0}},{"generated":{"line":353,"column":0},"source":"js/script.js","original":{"line":384,"column":0}},{"generated":{"line":354,"column":0},"source":"js/script.js","original":{"line":385,"column":0}},{"generated":{"line":355,"column":0},"source":"js/script.js","original":{"line":386,"column":0}},{"generated":{"line":356,"column":0},"source":"js/script.js","original":{"line":387,"column":0}},{"generated":{"line":357,"column":0},"source":"js/script.js","original":{"line":388,"column":0}},{"generated":{"line":359,"column":0},"source":"js/script.js","original":{"line":390,"column":0}},{"generated":{"line":362,"column":0},"source":"js/script.js","original":{"line":394,"column":0}},{"generated":{"line":364,"column":0},"source":"js/script.js","original":{"line":395,"column":0}},{"generated":{"line":374,"column":0},"source":"js/script.js","original":{"line":407,"column":0}},{"generated":{"line":375,"column":0},"source":"js/script.js","original":{"line":408,"column":0}},{"generated":{"line":376,"column":0},"source":"js/script.js","original":{"line":409,"column":0}},{"generated":{"line":377,"column":0},"source":"js/script.js","original":{"line":410,"column":0}},{"generated":{"line":378,"column":0},"source":"js/script.js","original":{"line":411,"column":0}},{"generated":{"line":379,"column":0},"source":"js/script.js","original":{"line":412,"column":0}},{"generated":{"line":380,"column":0},"source":"js/script.js","original":{"line":413,"column":0}},{"generated":{"line":381,"column":0},"source":"js/script.js","original":{"line":414,"column":0}},{"generated":{"line":382,"column":0},"source":"js/script.js","original":{"line":415,"column":0}},{"generated":{"line":383,"column":0},"source":"js/script.js","original":{"line":416,"column":0}},{"generated":{"line":384,"column":0},"source":"js/script.js","original":{"line":417,"column":0}},{"generated":{"line":385,"column":0},"source":"js/script.js","original":{"line":418,"column":0}},{"generated":{"line":386,"column":0},"source":"js/script.js","original":{"line":419,"column":0}},{"generated":{"line":387,"column":0},"source":"js/script.js","original":{"line":420,"column":0}},{"generated":{"line":388,"column":0},"source":"js/script.js","original":{"line":421,"column":0}},{"generated":{"line":389,"column":0},"source":"js/script.js","original":{"line":422,"column":0}},{"generated":{"line":390,"column":0},"source":"js/script.js","original":{"line":423,"column":0}},{"generated":{"line":391,"column":0},"source":"js/script.js","original":{"line":424,"column":0}},{"generated":{"line":392,"column":0},"source":"js/script.js","original":{"line":425,"column":0}},{"generated":{"line":393,"column":0},"source":"js/script.js","original":{"line":426,"column":0}},{"generated":{"line":394,"column":0},"source":"js/script.js","original":{"line":427,"column":0}},{"generated":{"line":395,"column":0},"source":"js/script.js","original":{"line":428,"column":0}},{"generated":{"line":396,"column":0},"source":"js/script.js","original":{"line":430,"column":0}},{"generated":{"line":397,"column":0},"source":"js/script.js","original":{"line":432,"column":0}},{"generated":{"line":398,"column":0},"source":"js/script.js","original":{"line":433,"column":0}},{"generated":{"line":399,"column":0},"source":"js/script.js","original":{"line":434,"column":0}},{"generated":{"line":400,"column":0},"source":"js/script.js","original":{"line":435,"column":0}},{"generated":{"line":401,"column":0},"source":"js/script.js","original":{"line":436,"column":0}},{"generated":{"line":402,"column":0},"source":"js/script.js","original":{"line":437,"column":0}},{"generated":{"line":403,"column":0},"source":"js/script.js","original":{"line":438,"column":0}},{"generated":{"line":404,"column":0},"source":"js/script.js","original":{"line":439,"column":0}},{"generated":{"line":405,"column":0},"source":"js/script.js","original":{"line":440,"column":0}},{"generated":{"line":406,"column":0},"source":"js/script.js","original":{"line":441,"column":0}},{"generated":{"line":407,"column":0},"source":"js/script.js","original":{"line":442,"column":0}},{"generated":{"line":408,"column":0},"source":"js/script.js","original":{"line":443,"column":0}},{"generated":{"line":409,"column":0},"source":"js/script.js","original":{"line":444,"column":0}},{"generated":{"line":410,"column":0},"source":"js/script.js","original":{"line":445,"column":0}},{"generated":{"line":411,"column":0},"source":"js/script.js","original":{"line":446,"column":0}},{"generated":{"line":412,"column":0},"source":"js/script.js","original":{"line":447,"column":0}},{"generated":{"line":413,"column":0},"source":"js/script.js","original":{"line":448,"column":0}},{"generated":{"line":414,"column":0},"source":"js/script.js","original":{"line":449,"column":0}},{"generated":{"line":416,"column":0},"source":"js/script.js","original":{"line":451,"column":0}},{"generated":{"line":420,"column":0},"source":"js/script.js","original":{"line":456,"column":0}},{"generated":{"line":421,"column":0},"source":"js/script.js","original":{"line":457,"column":0}},{"generated":{"line":422,"column":0},"source":"js/script.js","original":{"line":458,"column":0}},{"generated":{"line":423,"column":0},"source":"js/script.js","original":{"line":459,"column":0}},{"generated":{"line":424,"column":0},"source":"js/script.js","original":{"line":460,"column":0}},{"generated":{"line":425,"column":0},"source":"js/script.js","original":{"line":461,"column":0}},{"generated":{"line":426,"column":0},"source":"js/script.js","original":{"line":462,"column":0}},{"generated":{"line":427,"column":0},"source":"js/script.js","original":{"line":463,"column":0}},{"generated":{"line":428,"column":0},"source":"js/script.js","original":{"line":464,"column":0}},{"generated":{"line":430,"column":0},"source":"js/script.js","original":{"line":466,"column":0}},{"generated":{"line":434,"column":0},"source":"js/script.js","original":{"line":471,"column":0}},{"generated":{"line":435,"column":0},"source":"js/script.js","original":{"line":472,"column":0}},{"generated":{"line":436,"column":0},"source":"js/script.js","original":{"line":473,"column":0}},{"generated":{"line":437,"column":0},"source":"js/script.js","original":{"line":474,"column":0}},{"generated":{"line":438,"column":0},"source":"js/script.js","original":{"line":475,"column":0}},{"generated":{"line":439,"column":0},"source":"js/script.js","original":{"line":476,"column":0}},{"generated":{"line":440,"column":0},"source":"js/script.js","original":{"line":477,"column":0}},{"generated":{"line":441,"column":0},"source":"js/script.js","original":{"line":478,"column":0}},{"generated":{"line":442,"column":0},"source":"js/script.js","original":{"line":479,"column":0}},{"generated":{"line":443,"column":0},"source":"js/script.js","original":{"line":480,"column":0}},{"generated":{"line":444,"column":0},"source":"js/script.js","original":{"line":481,"column":0}},{"generated":{"line":445,"column":0},"source":"js/script.js","original":{"line":482,"column":0}},{"generated":{"line":446,"column":0},"source":"js/script.js","original":{"line":483,"column":0}},{"generated":{"line":447,"column":0},"source":"js/script.js","original":{"line":484,"column":0}},{"generated":{"line":449,"column":0},"source":"js/script.js","original":{"line":486,"column":0}},{"generated":{"line":453,"column":0},"source":"js/script.js","original":{"line":491,"column":0}},{"generated":{"line":454,"column":0},"source":"js/script.js","original":{"line":492,"column":0}},{"generated":{"line":455,"column":0},"source":"js/script.js","original":{"line":493,"column":0}},{"generated":{"line":456,"column":0},"source":"js/script.js","original":{"line":494,"column":0}},{"generated":{"line":457,"column":0},"source":"js/script.js","original":{"line":495,"column":0}},{"generated":{"line":458,"column":0},"source":"js/script.js","original":{"line":496,"column":0}},{"generated":{"line":459,"column":0},"source":"js/script.js","original":{"line":497,"column":0}},{"generated":{"line":461,"column":0},"source":"js/script.js","original":{"line":499,"column":0}},{"generated":{"line":465,"column":0},"source":"js/script.js","original":{"line":504,"column":0}},{"generated":{"line":466,"column":0},"source":"js/script.js","original":{"line":505,"column":0}},{"generated":{"line":467,"column":0},"source":"js/script.js","original":{"line":506,"column":0}},{"generated":{"line":468,"column":0},"source":"js/script.js","original":{"line":507,"column":0}},{"generated":{"line":469,"column":0},"source":"js/script.js","original":{"line":508,"column":0}},{"generated":{"line":470,"column":0},"source":"js/script.js","original":{"line":509,"column":0}},{"generated":{"line":472,"column":0},"source":"js/script.js","original":{"line":511,"column":0}},{"generated":{"line":476,"column":0},"source":"js/script.js","original":{"line":515,"column":0}},{"generated":{"line":477,"column":0},"source":"js/script.js","original":{"line":516,"column":0}},{"generated":{"line":478,"column":0},"source":"js/script.js","original":{"line":517,"column":0}},{"generated":{"line":479,"column":0},"source":"js/script.js","original":{"line":518,"column":0}},{"generated":{"line":480,"column":0},"source":"js/script.js","original":{"line":519,"column":0}},{"generated":{"line":481,"column":0},"source":"js/script.js","original":{"line":520,"column":0}},{"generated":{"line":482,"column":0},"source":"js/script.js","original":{"line":521,"column":0}},{"generated":{"line":483,"column":0},"source":"js/script.js","original":{"line":522,"column":0}},{"generated":{"line":484,"column":0},"source":"js/script.js","original":{"line":523,"column":0}},{"generated":{"line":485,"column":0},"source":"js/script.js","original":{"line":524,"column":0}},{"generated":{"line":486,"column":0},"source":"js/script.js","original":{"line":525,"column":0}},{"generated":{"line":487,"column":0},"source":"js/script.js","original":{"line":526,"column":0}},{"generated":{"line":488,"column":0},"source":"js/script.js","original":{"line":527,"column":0}},{"generated":{"line":489,"column":0},"source":"js/script.js","original":{"line":528,"column":0}},{"generated":{"line":490,"column":0},"source":"js/script.js","original":{"line":529,"column":0}},{"generated":{"line":492,"column":0},"source":"js/script.js","original":{"line":530,"column":0}},{"generated":{"line":496,"column":0},"source":"js/script.js","original":{"line":535,"column":0}},{"generated":{"line":497,"column":0},"source":"js/script.js","original":{"line":536,"column":0}},{"generated":{"line":498,"column":0},"source":"js/script.js","original":{"line":537,"column":0}},{"generated":{"line":499,"column":0},"source":"js/script.js","original":{"line":538,"column":0}},{"generated":{"line":500,"column":0},"source":"js/script.js","original":{"line":539,"column":0}},{"generated":{"line":501,"column":0},"source":"js/script.js","original":{"line":540,"column":0}},{"generated":{"line":502,"column":0},"source":"js/script.js","original":{"line":541,"column":0}},{"generated":{"line":503,"column":0},"source":"js/script.js","original":{"line":542,"column":0}},{"generated":{"line":504,"column":0},"source":"js/script.js","original":{"line":543,"column":0}},{"generated":{"line":505,"column":0},"source":"js/script.js","original":{"line":544,"column":0}},{"generated":{"line":506,"column":0},"source":"js/script.js","original":{"line":545,"column":0}},{"generated":{"line":508,"column":0},"source":"js/script.js","original":{"line":547,"column":0}},{"generated":{"line":512,"column":0},"source":"js/script.js","original":{"line":552,"column":0}},{"generated":{"line":513,"column":0},"source":"js/script.js","original":{"line":553,"column":0}},{"generated":{"line":514,"column":0},"source":"js/script.js","original":{"line":554,"column":0}},{"generated":{"line":515,"column":0},"source":"js/script.js","original":{"line":555,"column":0}},{"generated":{"line":517,"column":0},"source":"js/script.js","original":{"line":557,"column":0}},{"generated":{"line":521,"column":0},"source":"js/script.js","original":{"line":562,"column":0}},{"generated":{"line":522,"column":0},"source":"js/script.js","original":{"line":563,"column":0}},{"generated":{"line":523,"column":0},"source":"js/script.js","original":{"line":564,"column":0}},{"generated":{"line":524,"column":0},"source":"js/script.js","original":{"line":565,"column":0}},{"generated":{"line":525,"column":0},"source":"js/script.js","original":{"line":566,"column":0}},{"generated":{"line":526,"column":0},"source":"js/script.js","original":{"line":567,"column":0}},{"generated":{"line":527,"column":0},"source":"js/script.js","original":{"line":568,"column":0}},{"generated":{"line":528,"column":0},"source":"js/script.js","original":{"line":569,"column":0}},{"generated":{"line":529,"column":0},"source":"js/script.js","original":{"line":570,"column":0}},{"generated":{"line":531,"column":0},"source":"js/script.js","original":{"line":572,"column":0}},{"generated":{"line":536,"column":0},"source":"js/script.js","original":{"line":578,"column":0}},{"generated":{"line":537,"column":0},"source":"js/script.js","original":{"line":579,"column":0}},{"generated":{"line":538,"column":0},"source":"js/script.js","original":{"line":580,"column":0}},{"generated":{"line":539,"column":0},"source":"js/script.js","original":{"line":581,"column":0}},{"generated":{"line":540,"column":0},"source":"js/script.js","original":{"line":582,"column":0}},{"generated":{"line":541,"column":0},"source":"js/script.js","original":{"line":583,"column":0}},{"generated":{"line":542,"column":0},"source":"js/script.js","original":{"line":584,"column":0}},{"generated":{"line":543,"column":0},"source":"js/script.js","original":{"line":585,"column":0}},{"generated":{"line":544,"column":0},"source":"js/script.js","original":{"line":586,"column":0}},{"generated":{"line":545,"column":0},"source":"js/script.js","original":{"line":587,"column":0}},{"generated":{"line":547,"column":0},"source":"js/script.js","original":{"line":589,"column":0}},{"generated":{"line":551,"column":0},"source":"js/script.js","original":{"line":594,"column":0}},{"generated":{"line":552,"column":0},"source":"js/script.js","original":{"line":595,"column":0}},{"generated":{"line":553,"column":0},"source":"js/script.js","original":{"line":596,"column":0}},{"generated":{"line":554,"column":0},"source":"js/script.js","original":{"line":597,"column":0}},{"generated":{"line":556,"column":0},"source":"js/script.js","original":{"line":599,"column":0}},{"generated":{"line":560,"column":0},"source":"js/script.js","original":{"line":604,"column":0}},{"generated":{"line":561,"column":0},"source":"js/script.js","original":{"line":606,"column":0}},{"generated":{"line":562,"column":0},"source":"js/script.js","original":{"line":607,"column":0}},{"generated":{"line":563,"column":0},"source":"js/script.js","original":{"line":608,"column":0}},{"generated":{"line":564,"column":0},"source":"js/script.js","original":{"line":609,"column":0}},{"generated":{"line":565,"column":0},"source":"js/script.js","original":{"line":610,"column":0}},{"generated":{"line":566,"column":0},"source":"js/script.js","original":{"line":611,"column":0}},{"generated":{"line":567,"column":0},"source":"js/script.js","original":{"line":612,"column":0}},{"generated":{"line":568,"column":0},"source":"js/script.js","original":{"line":613,"column":0}},{"generated":{"line":569,"column":0},"source":"js/script.js","original":{"line":614,"column":0}},{"generated":{"line":570,"column":0},"source":"js/script.js","original":{"line":615,"column":0}},{"generated":{"line":571,"column":0},"source":"js/script.js","original":{"line":616,"column":0}},{"generated":{"line":572,"column":0},"source":"js/script.js","original":{"line":617,"column":0}},{"generated":{"line":573,"column":0},"source":"js/script.js","original":{"line":618,"column":0}},{"generated":{"line":574,"column":0},"source":"js/script.js","original":{"line":619,"column":0}},{"generated":{"line":575,"column":0},"source":"js/script.js","original":{"line":620,"column":0}},{"generated":{"line":577,"column":0},"source":"js/script.js","original":{"line":622,"column":0}},{"generated":{"line":581,"column":0},"source":"js/script.js","original":{"line":627,"column":0}},{"generated":{"line":582,"column":0},"source":"js/script.js","original":{"line":628,"column":0}},{"generated":{"line":583,"column":0},"source":"js/script.js","original":{"line":629,"column":0}},{"generated":{"line":584,"column":0},"source":"js/script.js","original":{"line":630,"column":0}},{"generated":{"line":585,"column":0},"source":"js/script.js","original":{"line":631,"column":0}},{"generated":{"line":586,"column":0},"source":"js/script.js","original":{"line":632,"column":0}},{"generated":{"line":587,"column":0},"source":"js/script.js","original":{"line":633,"column":0}},{"generated":{"line":588,"column":0},"source":"js/script.js","original":{"line":635,"column":0}},{"generated":{"line":589,"column":0},"source":"js/script.js","original":{"line":636,"column":0}},{"generated":{"line":590,"column":0},"source":"js/script.js","original":{"line":637,"column":0}},{"generated":{"line":591,"column":0},"source":"js/script.js","original":{"line":638,"column":0}},{"generated":{"line":592,"column":0},"source":"js/script.js","original":{"line":639,"column":0}},{"generated":{"line":593,"column":0},"source":"js/script.js","original":{"line":640,"column":0}},{"generated":{"line":594,"column":0},"source":"js/script.js","original":{"line":641,"column":0}},{"generated":{"line":595,"column":0},"source":"js/script.js","original":{"line":642,"column":0}},{"generated":{"line":596,"column":0},"source":"js/script.js","original":{"line":643,"column":0}},{"generated":{"line":597,"column":0},"source":"js/script.js","original":{"line":644,"column":0}},{"generated":{"line":598,"column":0},"source":"js/script.js","original":{"line":645,"column":0}},{"generated":{"line":599,"column":0},"source":"js/script.js","original":{"line":646,"column":0}},{"generated":{"line":601,"column":0},"source":"js/script.js","original":{"line":648,"column":0}},{"generated":{"line":604,"column":0},"source":"js/script.js","original":{"line":651,"column":0}},{"generated":{"line":611,"column":0},"source":"js/script.js","original":{"line":658,"column":0}},{"generated":{"line":615,"column":0},"source":"js/script.js","original":{"line":663,"column":0}},{"generated":{"line":616,"column":0},"source":"js/script.js","original":{"line":664,"column":0}},{"generated":{"line":617,"column":0},"source":"js/script.js","original":{"line":665,"column":0}},{"generated":{"line":618,"column":0},"source":"js/script.js","original":{"line":666,"column":0}},{"generated":{"line":619,"column":0},"source":"js/script.js","original":{"line":667,"column":0}},{"generated":{"line":620,"column":0},"source":"js/script.js","original":{"line":668,"column":0}},{"generated":{"line":621,"column":0},"source":"js/script.js","original":{"line":669,"column":0}},{"generated":{"line":622,"column":0},"source":"js/script.js","original":{"line":670,"column":0}},{"generated":{"line":623,"column":0},"source":"js/script.js","original":{"line":671,"column":0}},{"generated":{"line":624,"column":0},"source":"js/script.js","original":{"line":672,"column":0}},{"generated":{"line":625,"column":0},"source":"js/script.js","original":{"line":673,"column":0}},{"generated":{"line":626,"column":0},"source":"js/script.js","original":{"line":674,"column":0}},{"generated":{"line":627,"column":0},"source":"js/script.js","original":{"line":675,"column":0}},{"generated":{"line":628,"column":0},"source":"js/script.js","original":{"line":676,"column":0}},{"generated":{"line":630,"column":0},"source":"js/script.js","original":{"line":679,"column":0}},{"generated":{"line":632,"column":0},"source":"js/script.js","original":{"line":682,"column":0}},{"generated":{"line":633,"column":0},"source":"js/script.js","original":{"line":683,"column":0}},{"generated":{"line":634,"column":0},"source":"js/script.js","original":{"line":684,"column":0}},{"generated":{"line":635,"column":0},"source":"js/script.js","original":{"line":685,"column":0}},{"generated":{"line":636,"column":0},"source":"js/script.js","original":{"line":686,"column":0}},{"generated":{"line":637,"column":0},"source":"js/script.js","original":{"line":687,"column":0}},{"generated":{"line":638,"column":0},"source":"js/script.js","original":{"line":688,"column":0}},{"generated":{"line":639,"column":0},"source":"js/script.js","original":{"line":689,"column":0}},{"generated":{"line":640,"column":0},"source":"js/script.js","original":{"line":690,"column":0}},{"generated":{"line":641,"column":0},"source":"js/script.js","original":{"line":691,"column":0}},{"generated":{"line":642,"column":0},"source":"js/script.js","original":{"line":692,"column":0}},{"generated":{"line":643,"column":0},"source":"js/script.js","original":{"line":693,"column":0}},{"generated":{"line":644,"column":0},"source":"js/script.js","original":{"line":694,"column":0}},{"generated":{"line":646,"column":0},"source":"js/script.js","original":{"line":696,"column":0}},{"generated":{"line":651,"column":0},"source":"js/script.js","original":{"line":702,"column":0}},{"generated":{"line":652,"column":0},"source":"js/script.js","original":{"line":703,"column":0}},{"generated":{"line":653,"column":0},"source":"js/script.js","original":{"line":704,"column":0}},{"generated":{"line":654,"column":0},"source":"js/script.js","original":{"line":705,"column":0}},{"generated":{"line":655,"column":0},"source":"js/script.js","original":{"line":706,"column":0}},{"generated":{"line":656,"column":0},"source":"js/script.js","original":{"line":707,"column":0}},{"generated":{"line":657,"column":0},"source":"js/script.js","original":{"line":708,"column":0}},{"generated":{"line":658,"column":0},"source":"js/script.js","original":{"line":709,"column":0}},{"generated":{"line":659,"column":0},"source":"js/script.js","original":{"line":710,"column":0}},{"generated":{"line":660,"column":0},"source":"js/script.js","original":{"line":711,"column":0}},{"generated":{"line":661,"column":0},"source":"js/script.js","original":{"line":712,"column":0}},{"generated":{"line":662,"column":0},"source":"js/script.js","original":{"line":713,"column":0}},{"generated":{"line":663,"column":0},"source":"js/script.js","original":{"line":714,"column":0}},{"generated":{"line":664,"column":0},"source":"js/script.js","original":{"line":715,"column":0}},{"generated":{"line":666,"column":0},"source":"js/script.js","original":{"line":717,"column":0}},{"generated":{"line":669,"column":0},"source":"js/script.js","original":{"line":721,"column":0}},{"generated":{"line":670,"column":0},"source":"js/script.js","original":{"line":722,"column":0}},{"generated":{"line":671,"column":0},"source":"js/script.js","original":{"line":723,"column":0}},{"generated":{"line":672,"column":0},"source":"js/script.js","original":{"line":724,"column":0}},{"generated":{"line":673,"column":0},"source":"js/script.js","original":{"line":725,"column":0}},{"generated":{"line":674,"column":0},"source":"js/script.js","original":{"line":726,"column":0}},{"generated":{"line":675,"column":0},"source":"js/script.js","original":{"line":727,"column":0}},{"generated":{"line":676,"column":0},"source":"js/script.js","original":{"line":728,"column":0}},{"generated":{"line":677,"column":0},"source":"js/script.js","original":{"line":729,"column":0}},{"generated":{"line":678,"column":0},"source":"js/script.js","original":{"line":730,"column":0}},{"generated":{"line":679,"column":0},"source":"js/script.js","original":{"line":731,"column":0}},{"generated":{"line":680,"column":0},"source":"js/script.js","original":{"line":732,"column":0}},{"generated":{"line":681,"column":0},"source":"js/script.js","original":{"line":733,"column":0}},{"generated":{"line":682,"column":0},"source":"js/script.js","original":{"line":734,"column":0}},{"generated":{"line":683,"column":0},"source":"js/script.js","original":{"line":735,"column":0}},{"generated":{"line":684,"column":0},"source":"js/script.js","original":{"line":736,"column":0}},{"generated":{"line":685,"column":0},"source":"js/script.js","original":{"line":737,"column":0}},{"generated":{"line":686,"column":0},"source":"js/script.js","original":{"line":738,"column":0}},{"generated":{"line":687,"column":0},"source":"js/script.js","original":{"line":739,"column":0}},{"generated":{"line":688,"column":0},"source":"js/script.js","original":{"line":740,"column":0}},{"generated":{"line":689,"column":0},"source":"js/script.js","original":{"line":741,"column":0}},{"generated":{"line":690,"column":0},"source":"js/script.js","original":{"line":742,"column":0}},{"generated":{"line":691,"column":0},"source":"js/script.js","original":{"line":743,"column":0}},{"generated":{"line":692,"column":0},"source":"js/script.js","original":{"line":744,"column":0}},{"generated":{"line":694,"column":0},"source":"js/script.js","original":{"line":746,"column":0}},{"generated":{"line":698,"column":0},"source":"js/script.js","original":{"line":750,"column":0}},{"generated":{"line":699,"column":0},"source":"js/script.js","original":{"line":751,"column":0}},{"generated":{"line":700,"column":0},"source":"js/script.js","original":{"line":752,"column":0}},{"generated":{"line":701,"column":0},"source":"js/script.js","original":{"line":753,"column":0}},{"generated":{"line":702,"column":0},"source":"js/script.js","original":{"line":754,"column":0}},{"generated":{"line":703,"column":0},"source":"js/script.js","original":{"line":755,"column":0}},{"generated":{"line":704,"column":0},"source":"js/script.js","original":{"line":756,"column":0}},{"generated":{"line":705,"column":0},"source":"js/script.js","original":{"line":757,"column":0}},{"generated":{"line":706,"column":0},"source":"js/script.js","original":{"line":758,"column":0}},{"generated":{"line":707,"column":0},"source":"js/script.js","original":{"line":759,"column":0}},{"generated":{"line":708,"column":0},"source":"js/script.js","original":{"line":760,"column":0}},{"generated":{"line":709,"column":0},"source":"js/script.js","original":{"line":761,"column":0}},{"generated":{"line":710,"column":0},"source":"js/script.js","original":{"line":762,"column":0}},{"generated":{"line":711,"column":0},"source":"js/script.js","original":{"line":763,"column":0}},{"generated":{"line":712,"column":0},"source":"js/script.js","original":{"line":764,"column":0}},{"generated":{"line":713,"column":0},"source":"js/script.js","original":{"line":765,"column":0}},{"generated":{"line":714,"column":0},"source":"js/script.js","original":{"line":766,"column":0}},{"generated":{"line":715,"column":0},"source":"js/script.js","original":{"line":767,"column":0}},{"generated":{"line":717,"column":0},"source":"js/script.js","original":{"line":769,"column":0}},{"generated":{"line":721,"column":0},"source":"js/script.js","original":{"line":774,"column":0}},{"generated":{"line":722,"column":0},"source":"js/script.js","original":{"line":775,"column":0}},{"generated":{"line":723,"column":0},"source":"js/script.js","original":{"line":776,"column":0}},{"generated":{"line":724,"column":0},"source":"js/script.js","original":{"line":777,"column":0}},{"generated":{"line":725,"column":0},"source":"js/script.js","original":{"line":778,"column":0}},{"generated":{"line":726,"column":0},"source":"js/script.js","original":{"line":779,"column":0}},{"generated":{"line":727,"column":0},"source":"js/script.js","original":{"line":780,"column":0}},{"generated":{"line":728,"column":0},"source":"js/script.js","original":{"line":781,"column":0}},{"generated":{"line":729,"column":0},"source":"js/script.js","original":{"line":782,"column":0}},{"generated":{"line":730,"column":0},"source":"js/script.js","original":{"line":783,"column":0}},{"generated":{"line":731,"column":0},"source":"js/script.js","original":{"line":784,"column":0}},{"generated":{"line":732,"column":0},"source":"js/script.js","original":{"line":785,"column":0}},{"generated":{"line":733,"column":0},"source":"js/script.js","original":{"line":786,"column":0}},{"generated":{"line":734,"column":0},"source":"js/script.js","original":{"line":787,"column":0}},{"generated":{"line":735,"column":0},"source":"js/script.js","original":{"line":788,"column":0}},{"generated":{"line":736,"column":0},"source":"js/script.js","original":{"line":789,"column":0}},{"generated":{"line":737,"column":0},"source":"js/script.js","original":{"line":790,"column":0}},{"generated":{"line":738,"column":0},"source":"js/script.js","original":{"line":791,"column":0}},{"generated":{"line":739,"column":0},"source":"js/script.js","original":{"line":792,"column":0}},{"generated":{"line":740,"column":0},"source":"js/script.js","original":{"line":793,"column":0}},{"generated":{"line":741,"column":0},"source":"js/script.js","original":{"line":794,"column":0}},{"generated":{"line":742,"column":0},"source":"js/script.js","original":{"line":795,"column":0}},{"generated":{"line":743,"column":0},"source":"js/script.js","original":{"line":796,"column":0}},{"generated":{"line":744,"column":0},"source":"js/script.js","original":{"line":797,"column":0}},{"generated":{"line":745,"column":0},"source":"js/script.js","original":{"line":798,"column":0}},{"generated":{"line":746,"column":0},"source":"js/script.js","original":{"line":799,"column":0}},{"generated":{"line":747,"column":0},"source":"js/script.js","original":{"line":800,"column":0}},{"generated":{"line":748,"column":0},"source":"js/script.js","original":{"line":801,"column":0}},{"generated":{"line":749,"column":0},"source":"js/script.js","original":{"line":802,"column":0}},{"generated":{"line":750,"column":0},"source":"js/script.js","original":{"line":803,"column":0}},{"generated":{"line":751,"column":0},"source":"js/script.js","original":{"line":804,"column":0}},{"generated":{"line":752,"column":0},"source":"js/script.js","original":{"line":805,"column":0}},{"generated":{"line":753,"column":0},"source":"js/script.js","original":{"line":806,"column":0}},{"generated":{"line":754,"column":0},"source":"js/script.js","original":{"line":807,"column":0}},{"generated":{"line":755,"column":0},"source":"js/script.js","original":{"line":808,"column":0}},{"generated":{"line":756,"column":0},"source":"js/script.js","original":{"line":809,"column":0}},{"generated":{"line":757,"column":0},"source":"js/script.js","original":{"line":810,"column":0}},{"generated":{"line":758,"column":0},"source":"js/script.js","original":{"line":811,"column":0}},{"generated":{"line":759,"column":0},"source":"js/script.js","original":{"line":812,"column":0}},{"generated":{"line":760,"column":0},"source":"js/script.js","original":{"line":813,"column":0}},{"generated":{"line":761,"column":0},"source":"js/script.js","original":{"line":814,"column":0}},{"generated":{"line":762,"column":0},"source":"js/script.js","original":{"line":815,"column":0}},{"generated":{"line":763,"column":0},"source":"js/script.js","original":{"line":816,"column":0}},{"generated":{"line":765,"column":0},"source":"js/script.js","original":{"line":822,"column":0}},{"generated":{"line":769,"column":0},"source":"js/script.js","original":{"line":827,"column":0}},{"generated":{"line":770,"column":0},"source":"js/script.js","original":{"line":828,"column":0}},{"generated":{"line":771,"column":0},"source":"js/script.js","original":{"line":829,"column":0}},{"generated":{"line":772,"column":0},"source":"js/script.js","original":{"line":830,"column":0}},{"generated":{"line":773,"column":0},"source":"js/script.js","original":{"line":831,"column":0}},{"generated":{"line":774,"column":0},"source":"js/script.js","original":{"line":832,"column":0}},{"generated":{"line":775,"column":0},"source":"js/script.js","original":{"line":833,"column":0}},{"generated":{"line":776,"column":0},"source":"js/script.js","original":{"line":834,"column":0}},{"generated":{"line":777,"column":0},"source":"js/script.js","original":{"line":835,"column":0}},{"generated":{"line":778,"column":0},"source":"js/script.js","original":{"line":836,"column":0}},{"generated":{"line":779,"column":0},"source":"js/script.js","original":{"line":837,"column":0}},{"generated":{"line":780,"column":0},"source":"js/script.js","original":{"line":838,"column":0}},{"generated":{"line":781,"column":0},"source":"js/script.js","original":{"line":839,"column":0}},{"generated":{"line":782,"column":0},"source":"js/script.js","original":{"line":840,"column":0}},{"generated":{"line":784,"column":0},"source":"js/script.js","original":{"line":842,"column":0}},{"generated":{"line":787,"column":0},"source":"js/script.js","original":{"line":846,"column":0}},{"generated":{"line":788,"column":0},"source":"js/script.js","original":{"line":847,"column":0}},{"generated":{"line":789,"column":0},"source":"js/script.js","original":{"line":848,"column":0}},{"generated":{"line":790,"column":0},"source":"js/script.js","original":{"line":849,"column":0}},{"generated":{"line":791,"column":0},"source":"js/script.js","original":{"line":850,"column":0}},{"generated":{"line":792,"column":0},"source":"js/script.js","original":{"line":851,"column":0}},{"generated":{"line":793,"column":0},"source":"js/script.js","original":{"line":852,"column":0}},{"generated":{"line":794,"column":0},"source":"js/script.js","original":{"line":853,"column":0}},{"generated":{"line":795,"column":0},"source":"js/script.js","original":{"line":854,"column":0}},{"generated":{"line":797,"column":0},"source":"js/script.js","original":{"line":856,"column":0}},{"generated":{"line":801,"column":0},"source":"js/script.js","original":{"line":861,"column":0}},{"generated":{"line":802,"column":0},"source":"js/script.js","original":{"line":862,"column":0}},{"generated":{"line":803,"column":0},"source":"js/script.js","original":{"line":863,"column":0}},{"generated":{"line":804,"column":0},"source":"js/script.js","original":{"line":864,"column":0}},{"generated":{"line":805,"column":0},"source":"js/script.js","original":{"line":865,"column":0}},{"generated":{"line":806,"column":0},"source":"js/script.js","original":{"line":866,"column":0}},{"generated":{"line":807,"column":0},"source":"js/script.js","original":{"line":867,"column":0}},{"generated":{"line":808,"column":0},"source":"js/script.js","original":{"line":868,"column":0}},{"generated":{"line":809,"column":0},"source":"js/script.js","original":{"line":869,"column":0}},{"generated":{"line":810,"column":0},"source":"js/script.js","original":{"line":870,"column":0}},{"generated":{"line":811,"column":0},"source":"js/script.js","original":{"line":871,"column":0}},{"generated":{"line":812,"column":0},"source":"js/script.js","original":{"line":872,"column":0}},{"generated":{"line":813,"column":0},"source":"js/script.js","original":{"line":873,"column":0}},{"generated":{"line":814,"column":0},"source":"js/script.js","original":{"line":874,"column":0}},{"generated":{"line":815,"column":0},"source":"js/script.js","original":{"line":875,"column":0}},{"generated":{"line":816,"column":0},"source":"js/script.js","original":{"line":876,"column":0}},{"generated":{"line":817,"column":0},"source":"js/script.js","original":{"line":877,"column":0}},{"generated":{"line":819,"column":0},"source":"js/script.js","original":{"line":880,"column":0}},{"generated":{"line":823,"column":0},"source":"js/script.js","original":{"line":885,"column":0}},{"generated":{"line":824,"column":0},"source":"js/script.js","original":{"line":886,"column":0}},{"generated":{"line":825,"column":0},"source":"js/script.js","original":{"line":887,"column":0}},{"generated":{"line":826,"column":0},"source":"js/script.js","original":{"line":888,"column":0}},{"generated":{"line":827,"column":0},"source":"js/script.js","original":{"line":889,"column":0}},{"generated":{"line":828,"column":0},"source":"js/script.js","original":{"line":890,"column":0}},{"generated":{"line":829,"column":0},"source":"js/script.js","original":{"line":891,"column":0}},{"generated":{"line":830,"column":0},"source":"js/script.js","original":{"line":892,"column":0}},{"generated":{"line":831,"column":0},"source":"js/script.js","original":{"line":893,"column":0}},{"generated":{"line":832,"column":0},"source":"js/script.js","original":{"line":894,"column":0}},{"generated":{"line":833,"column":0},"source":"js/script.js","original":{"line":895,"column":0}},{"generated":{"line":834,"column":0},"source":"js/script.js","original":{"line":896,"column":0}},{"generated":{"line":835,"column":0},"source":"js/script.js","original":{"line":897,"column":0}},{"generated":{"line":836,"column":0},"source":"js/script.js","original":{"line":898,"column":0}},{"generated":{"line":837,"column":0},"source":"js/script.js","original":{"line":899,"column":0}},{"generated":{"line":838,"column":0},"source":"js/script.js","original":{"line":900,"column":0}},{"generated":{"line":839,"column":0},"source":"js/script.js","original":{"line":901,"column":0}},{"generated":{"line":841,"column":0},"source":"js/script.js","original":{"line":903,"column":0}},{"generated":{"line":848,"column":0},"source":"js/script.js","original":{"line":911,"column":0}},{"generated":{"line":849,"column":0},"source":"js/script.js","original":{"line":912,"column":0}},{"generated":{"line":850,"column":0},"source":"js/script.js","original":{"line":913,"column":0}},{"generated":{"line":851,"column":0},"source":"js/script.js","original":{"line":914,"column":0}},{"generated":{"line":852,"column":0},"source":"js/script.js","original":{"line":915,"column":0}},{"generated":{"line":853,"column":0},"source":"js/script.js","original":{"line":916,"column":0}},{"generated":{"line":854,"column":0},"source":"js/script.js","original":{"line":917,"column":0}},{"generated":{"line":855,"column":0},"source":"js/script.js","original":{"line":918,"column":0}},{"generated":{"line":856,"column":0},"source":"js/script.js","original":{"line":919,"column":0}},{"generated":{"line":857,"column":0},"source":"js/script.js","original":{"line":920,"column":0}},{"generated":{"line":858,"column":0},"source":"js/script.js","original":{"line":921,"column":0}},{"generated":{"line":859,"column":0},"source":"js/script.js","original":{"line":922,"column":0}},{"generated":{"line":860,"column":0},"source":"js/script.js","original":{"line":923,"column":0}},{"generated":{"line":861,"column":0},"source":"js/script.js","original":{"line":924,"column":0}},{"generated":{"line":863,"column":0},"source":"js/script.js","original":{"line":926,"column":0}},{"generated":{"line":873,"column":0},"source":"js/script.js","original":{"line":937,"column":0}},{"generated":{"line":874,"column":0},"source":"js/script.js","original":{"line":938,"column":0}},{"generated":{"line":875,"column":0},"source":"js/script.js","original":{"line":939,"column":0}},{"generated":{"line":876,"column":0},"source":"js/script.js","original":{"line":940,"column":0}},{"generated":{"line":877,"column":0},"source":"js/script.js","original":{"line":941,"column":0}},{"generated":{"line":878,"column":0},"source":"js/script.js","original":{"line":942,"column":0}},{"generated":{"line":879,"column":0},"source":"js/script.js","original":{"line":943,"column":0}},{"generated":{"line":880,"column":0},"source":"js/script.js","original":{"line":944,"column":0}},{"generated":{"line":881,"column":0},"source":"js/script.js","original":{"line":945,"column":0}},{"generated":{"line":882,"column":0},"source":"js/script.js","original":{"line":946,"column":0}},{"generated":{"line":883,"column":0},"source":"js/script.js","original":{"line":947,"column":0}},{"generated":{"line":884,"column":0},"source":"js/script.js","original":{"line":948,"column":0}},{"generated":{"line":885,"column":0},"source":"js/script.js","original":{"line":949,"column":0}},{"generated":{"line":886,"column":0},"source":"js/script.js","original":{"line":950,"column":0}},{"generated":{"line":887,"column":0},"source":"js/script.js","original":{"line":951,"column":0}},{"generated":{"line":888,"column":0},"source":"js/script.js","original":{"line":952,"column":0}},{"generated":{"line":889,"column":0},"source":"js/script.js","original":{"line":953,"column":0}},{"generated":{"line":890,"column":0},"source":"js/script.js","original":{"line":954,"column":0}},{"generated":{"line":891,"column":0},"source":"js/script.js","original":{"line":955,"column":0}},{"generated":{"line":892,"column":0},"source":"js/script.js","original":{"line":956,"column":0}},{"generated":{"line":893,"column":0},"source":"js/script.js","original":{"line":957,"column":0}},{"generated":{"line":894,"column":0},"source":"js/script.js","original":{"line":958,"column":0}},{"generated":{"line":895,"column":0},"source":"js/script.js","original":{"line":959,"column":0}},{"generated":{"line":896,"column":0},"source":"js/script.js","original":{"line":960,"column":0}},{"generated":{"line":897,"column":0},"source":"js/script.js","original":{"line":961,"column":0}},{"generated":{"line":898,"column":0},"source":"js/script.js","original":{"line":962,"column":0}},{"generated":{"line":899,"column":0},"source":"js/script.js","original":{"line":963,"column":0}},{"generated":{"line":900,"column":0},"source":"js/script.js","original":{"line":964,"column":0}},{"generated":{"line":901,"column":0},"source":"js/script.js","original":{"line":965,"column":0}},{"generated":{"line":902,"column":0},"source":"js/script.js","original":{"line":966,"column":0}},{"generated":{"line":904,"column":0},"source":"js/script.js","original":{"line":968,"column":0}},{"generated":{"line":907,"column":0},"source":"js/script.js","original":{"line":972,"column":0}},{"generated":{"line":908,"column":0},"source":"js/script.js","original":{"line":973,"column":0}},{"generated":{"line":909,"column":0},"source":"js/script.js","original":{"line":974,"column":0}},{"generated":{"line":910,"column":0},"source":"js/script.js","original":{"line":975,"column":0}},{"generated":{"line":911,"column":0},"source":"js/script.js","original":{"line":976,"column":0}},{"generated":{"line":912,"column":0},"source":"js/script.js","original":{"line":977,"column":0}},{"generated":{"line":913,"column":0},"source":"js/script.js","original":{"line":978,"column":0}},{"generated":{"line":914,"column":0},"source":"js/script.js","original":{"line":979,"column":0}},{"generated":{"line":915,"column":0},"source":"js/script.js","original":{"line":980,"column":0}},{"generated":{"line":916,"column":0},"source":"js/script.js","original":{"line":981,"column":0}},{"generated":{"line":917,"column":0},"source":"js/script.js","original":{"line":982,"column":0}},{"generated":{"line":918,"column":0},"source":"js/script.js","original":{"line":983,"column":0}},{"generated":{"line":919,"column":0},"source":"js/script.js","original":{"line":984,"column":0}},{"generated":{"line":920,"column":0},"source":"js/script.js","original":{"line":985,"column":0}},{"generated":{"line":921,"column":0},"source":"js/script.js","original":{"line":986,"column":0}},{"generated":{"line":922,"column":0},"source":"js/script.js","original":{"line":987,"column":0}},{"generated":{"line":923,"column":0},"source":"js/script.js","original":{"line":988,"column":0}},{"generated":{"line":924,"column":0},"source":"js/script.js","original":{"line":989,"column":0}},{"generated":{"line":925,"column":0},"source":"js/script.js","original":{"line":990,"column":0}},{"generated":{"line":926,"column":0},"source":"js/script.js","original":{"line":991,"column":0}},{"generated":{"line":927,"column":0},"source":"js/script.js","original":{"line":992,"column":0}},{"generated":{"line":928,"column":0},"source":"js/script.js","original":{"line":993,"column":0}},{"generated":{"line":929,"column":0},"source":"js/script.js","original":{"line":994,"column":0}},{"generated":{"line":930,"column":0},"source":"js/script.js","original":{"line":995,"column":0}},{"generated":{"line":931,"column":0},"source":"js/script.js","original":{"line":996,"column":0}},{"generated":{"line":932,"column":0},"source":"js/script.js","original":{"line":997,"column":0}},{"generated":{"line":933,"column":0},"source":"js/script.js","original":{"line":998,"column":0}},{"generated":{"line":934,"column":0},"source":"js/script.js","original":{"line":999,"column":0}},{"generated":{"line":935,"column":0},"source":"js/script.js","original":{"line":1000,"column":0}},{"generated":{"line":936,"column":0},"source":"js/script.js","original":{"line":1001,"column":0}},{"generated":{"line":937,"column":0},"source":"js/script.js","original":{"line":1002,"column":0}},{"generated":{"line":938,"column":0},"source":"js/script.js","original":{"line":1003,"column":0}},{"generated":{"line":940,"column":0},"source":"js/script.js","original":{"line":1006,"column":0}},{"generated":{"line":950,"column":0},"source":"js/script.js","original":{"line":1017,"column":0}},{"generated":{"line":951,"column":0},"source":"js/script.js","original":{"line":1018,"column":0}},{"generated":{"line":952,"column":0},"source":"js/script.js","original":{"line":1019,"column":0}},{"generated":{"line":953,"column":0},"source":"js/script.js","original":{"line":1020,"column":0}},{"generated":{"line":954,"column":0},"source":"js/script.js","original":{"line":1021,"column":0}},{"generated":{"line":955,"column":0},"source":"js/script.js","original":{"line":1022,"column":0}},{"generated":{"line":956,"column":0},"source":"js/script.js","original":{"line":1023,"column":0}},{"generated":{"line":957,"column":0},"source":"js/script.js","original":{"line":1024,"column":0}},{"generated":{"line":958,"column":0},"source":"js/script.js","original":{"line":1025,"column":0}},{"generated":{"line":959,"column":0},"source":"js/script.js","original":{"line":1026,"column":0}},{"generated":{"line":960,"column":0},"source":"js/script.js","original":{"line":1027,"column":0}},{"generated":{"line":961,"column":0},"source":"js/script.js","original":{"line":1028,"column":0}},{"generated":{"line":962,"column":0},"source":"js/script.js","original":{"line":1029,"column":0}},{"generated":{"line":963,"column":0},"source":"js/script.js","original":{"line":1030,"column":0}},{"generated":{"line":964,"column":0},"source":"js/script.js","original":{"line":1031,"column":0}},{"generated":{"line":965,"column":0},"source":"js/script.js","original":{"line":1032,"column":0}},{"generated":{"line":966,"column":0},"source":"js/script.js","original":{"line":1033,"column":0}},{"generated":{"line":967,"column":0},"source":"js/script.js","original":{"line":1034,"column":0}},{"generated":{"line":968,"column":0},"source":"js/script.js","original":{"line":1035,"column":0}},{"generated":{"line":969,"column":0},"source":"js/script.js","original":{"line":1036,"column":0}},{"generated":{"line":970,"column":0},"source":"js/script.js","original":{"line":1037,"column":0}},{"generated":{"line":971,"column":0},"source":"js/script.js","original":{"line":1038,"column":0}},{"generated":{"line":972,"column":0},"source":"js/script.js","original":{"line":1039,"column":0}},{"generated":{"line":973,"column":0},"source":"js/script.js","original":{"line":1040,"column":0}},{"generated":{"line":974,"column":0},"source":"js/script.js","original":{"line":1041,"column":0}},{"generated":{"line":975,"column":0},"source":"js/script.js","original":{"line":1042,"column":0}},{"generated":{"line":976,"column":0},"source":"js/script.js","original":{"line":1043,"column":0}},{"generated":{"line":977,"column":0},"source":"js/script.js","original":{"line":1044,"column":0}},{"generated":{"line":978,"column":0},"source":"js/script.js","original":{"line":1045,"column":0}},{"generated":{"line":979,"column":0},"source":"js/script.js","original":{"line":1046,"column":0}},{"generated":{"line":981,"column":0},"source":"js/script.js","original":{"line":1048,"column":0}},{"generated":{"line":984,"column":0},"source":"js/script.js","original":{"line":1052,"column":0}},{"generated":{"line":985,"column":0},"source":"js/script.js","original":{"line":1053,"column":0}},{"generated":{"line":986,"column":0},"source":"js/script.js","original":{"line":1054,"column":0}},{"generated":{"line":987,"column":0},"source":"js/script.js","original":{"line":1055,"column":0}},{"generated":{"line":988,"column":0},"source":"js/script.js","original":{"line":1056,"column":0}},{"generated":{"line":989,"column":0},"source":"js/script.js","original":{"line":1057,"column":0}},{"generated":{"line":990,"column":0},"source":"js/script.js","original":{"line":1058,"column":0}},{"generated":{"line":991,"column":0},"source":"js/script.js","original":{"line":1059,"column":0}},{"generated":{"line":992,"column":0},"source":"js/script.js","original":{"line":1060,"column":0}},{"generated":{"line":994,"column":0},"source":"js/script.js","original":{"line":1062,"column":0}},{"generated":{"line":996,"column":0},"source":"js/script.js","original":{"line":1065,"column":0}},{"generated":{"line":997,"column":0},"source":"js/script.js","original":{"line":1066,"column":0}},{"generated":{"line":998,"column":0},"source":"js/script.js","original":{"line":1067,"column":0}},{"generated":{"line":999,"column":0},"source":"js/script.js","original":{"line":1068,"column":0}},{"generated":{"line":1000,"column":0},"source":"js/script.js","original":{"line":1069,"column":0}},{"generated":{"line":1001,"column":0},"source":"js/script.js","original":{"line":1070,"column":0}},{"generated":{"line":1002,"column":0},"source":"js/script.js","original":{"line":1071,"column":0}},{"generated":{"line":1003,"column":0},"source":"js/script.js","original":{"line":1072,"column":0}},{"generated":{"line":1004,"column":0},"source":"js/script.js","original":{"line":1073,"column":0}},{"generated":{"line":1006,"column":0},"source":"js/script.js","original":{"line":1075,"column":0}},{"generated":{"line":1008,"column":0},"source":"js/script.js","original":{"line":1078,"column":0}},{"generated":{"line":1009,"column":0},"source":"js/script.js","original":{"line":1079,"column":0}},{"generated":{"line":1010,"column":0},"source":"js/script.js","original":{"line":1080,"column":0}},{"generated":{"line":1011,"column":0},"source":"js/script.js","original":{"line":1081,"column":0}},{"generated":{"line":1012,"column":0},"source":"js/script.js","original":{"line":1082,"column":0}},{"generated":{"line":1013,"column":0},"source":"js/script.js","original":{"line":1083,"column":0}},{"generated":{"line":1014,"column":0},"source":"js/script.js","original":{"line":1084,"column":0}},{"generated":{"line":1015,"column":0},"source":"js/script.js","original":{"line":1085,"column":0}},{"generated":{"line":1016,"column":0},"source":"js/script.js","original":{"line":1086,"column":0}},{"generated":{"line":1018,"column":0},"source":"js/script.js","original":{"line":1088,"column":0}},{"generated":{"line":1021,"column":0},"source":"js/script.js","original":{"line":1092,"column":0}},{"generated":{"line":1022,"column":0},"source":"js/script.js","original":{"line":1093,"column":0}},{"generated":{"line":1023,"column":0},"source":"js/script.js","original":{"line":1094,"column":0}},{"generated":{"line":1024,"column":0},"source":"js/script.js","original":{"line":1095,"column":0}},{"generated":{"line":1025,"column":0},"source":"js/script.js","original":{"line":1096,"column":0}},{"generated":{"line":1026,"column":0},"source":"js/script.js","original":{"line":1097,"column":0}},{"generated":{"line":1027,"column":0},"source":"js/script.js","original":{"line":1098,"column":0}},{"generated":{"line":1028,"column":0},"source":"js/script.js","original":{"line":1099,"column":0}},{"generated":{"line":1029,"column":0},"source":"js/script.js","original":{"line":1100,"column":0}},{"generated":{"line":1030,"column":0},"source":"js/script.js","original":{"line":1101,"column":0}},{"generated":{"line":1032,"column":0},"source":"js/script.js","original":{"line":1103,"column":0}},{"generated":{"line":1035,"column":0},"source":"js/script.js","original":{"line":1107,"column":0}},{"generated":{"line":1036,"column":0},"source":"js/script.js","original":{"line":1108,"column":0}},{"generated":{"line":1037,"column":0},"source":"js/script.js","original":{"line":1109,"column":0}},{"generated":{"line":1038,"column":0},"source":"js/script.js","original":{"line":1110,"column":0}},{"generated":{"line":1039,"column":0},"source":"js/script.js","original":{"line":1111,"column":0}},{"generated":{"line":1040,"column":0},"source":"js/script.js","original":{"line":1112,"column":0}},{"generated":{"line":1041,"column":0},"source":"js/script.js","original":{"line":1113,"column":0}},{"generated":{"line":1042,"column":0},"source":"js/script.js","original":{"line":1114,"column":0}},{"generated":{"line":1043,"column":0},"source":"js/script.js","original":{"line":1115,"column":0}},{"generated":{"line":1044,"column":0},"source":"js/script.js","original":{"line":1116,"column":0}},{"generated":{"line":1045,"column":0},"source":"js/script.js","original":{"line":1117,"column":0}},{"generated":{"line":1047,"column":0},"source":"js/script.js","original":{"line":1119,"column":0}},{"generated":{"line":1050,"column":0},"source":"js/script.js","original":{"line":1123,"column":0}},{"generated":{"line":1051,"column":0},"source":"js/script.js","original":{"line":1124,"column":0}},{"generated":{"line":1052,"column":0},"source":"js/script.js","original":{"line":1125,"column":0}},{"generated":{"line":1053,"column":0},"source":"js/script.js","original":{"line":1126,"column":0}},{"generated":{"line":1054,"column":0},"source":"js/script.js","original":{"line":1127,"column":0}},{"generated":{"line":1055,"column":0},"source":"js/script.js","original":{"line":1128,"column":0}},{"generated":{"line":1056,"column":0},"source":"js/script.js","original":{"line":1129,"column":0}},{"generated":{"line":1058,"column":0},"source":"js/script.js","original":{"line":1131,"column":0}},{"generated":{"line":1061,"column":0},"source":"js/script.js","original":{"line":1135,"column":0}},{"generated":{"line":1062,"column":0},"source":"js/script.js","original":{"line":1136,"column":0}},{"generated":{"line":1063,"column":0},"source":"js/script.js","original":{"line":1137,"column":0}},{"generated":{"line":1064,"column":0},"source":"js/script.js","original":{"line":1138,"column":0}},{"generated":{"line":1065,"column":0},"source":"js/script.js","original":{"line":1139,"column":0}},{"generated":{"line":1066,"column":0},"source":"js/script.js","original":{"line":1140,"column":0}},{"generated":{"line":1067,"column":0},"source":"js/script.js","original":{"line":1141,"column":0}},{"generated":{"line":1068,"column":0},"source":"js/script.js","original":{"line":1142,"column":0}},{"generated":{"line":1069,"column":0},"source":"js/script.js","original":{"line":1143,"column":0}},{"generated":{"line":1070,"column":0},"source":"js/script.js","original":{"line":1144,"column":0}},{"generated":{"line":1071,"column":0},"source":"js/script.js","original":{"line":1145,"column":0}},{"generated":{"line":1072,"column":0},"source":"js/script.js","original":{"line":1146,"column":0}},{"generated":{"line":1073,"column":0},"source":"js/script.js","original":{"line":1147,"column":0}},{"generated":{"line":1075,"column":0},"source":"js/script.js","original":{"line":1150,"column":0}},{"generated":{"line":1078,"column":0},"source":"js/script.js","original":{"line":1154,"column":0}},{"generated":{"line":1079,"column":0},"source":"js/script.js","original":{"line":1155,"column":0}},{"generated":{"line":1080,"column":0},"source":"js/script.js","original":{"line":1156,"column":0}},{"generated":{"line":1081,"column":0},"source":"js/script.js","original":{"line":1157,"column":0}},{"generated":{"line":1082,"column":0},"source":"js/script.js","original":{"line":1158,"column":0}},{"generated":{"line":1083,"column":0},"source":"js/script.js","original":{"line":1159,"column":0}},{"generated":{"line":1084,"column":0},"source":"js/script.js","original":{"line":1160,"column":0}},{"generated":{"line":1086,"column":0},"source":"js/script.js","original":{"line":1162,"column":0}},{"generated":{"line":1089,"column":0},"source":"js/script.js","original":{"line":1166,"column":0}},{"generated":{"line":1090,"column":0},"source":"js/script.js","original":{"line":1167,"column":0}},{"generated":{"line":1091,"column":0},"source":"js/script.js","original":{"line":1168,"column":0}},{"generated":{"line":1092,"column":0},"source":"js/script.js","original":{"line":1169,"column":0}},{"generated":{"line":1093,"column":0},"source":"js/script.js","original":{"line":1170,"column":0}},{"generated":{"line":1094,"column":0},"source":"js/script.js","original":{"line":1171,"column":0}},{"generated":{"line":1095,"column":0},"source":"js/script.js","original":{"line":1172,"column":0}},{"generated":{"line":1096,"column":0},"source":"js/script.js","original":{"line":1173,"column":0}},{"generated":{"line":1097,"column":0},"source":"js/script.js","original":{"line":1174,"column":0}},{"generated":{"line":1099,"column":0},"source":"js/script.js","original":{"line":1176,"column":0}},{"generated":{"line":1102,"column":0},"source":"js/script.js","original":{"line":1180,"column":0}},{"generated":{"line":1103,"column":0},"source":"js/script.js","original":{"line":1181,"column":0}},{"generated":{"line":1104,"column":0},"source":"js/script.js","original":{"line":1182,"column":0}},{"generated":{"line":1105,"column":0},"source":"js/script.js","original":{"line":1183,"column":0}},{"generated":{"line":1106,"column":0},"source":"js/script.js","original":{"line":1184,"column":0}},{"generated":{"line":1107,"column":0},"source":"js/script.js","original":{"line":1185,"column":0}},{"generated":{"line":1108,"column":0},"source":"js/script.js","original":{"line":1186,"column":0}},{"generated":{"line":1109,"column":0},"source":"js/script.js","original":{"line":1187,"column":0}},{"generated":{"line":1110,"column":0},"source":"js/script.js","original":{"line":1188,"column":0}},{"generated":{"line":1111,"column":0},"source":"js/script.js","original":{"line":1189,"column":0}}],"sources":{"js/script.js":"'use strict'\r\n\r\n/*1. Задача (Система уравнений)*/\r\n// let a = 6, b = 6;\r\n// let x = a > b ? console.log(a + b / 2 * 4)\r\n//     : a === b ? console.log(400)\r\n//         : a < b ? console.log(a - b + 2 / b * 4)\r\n//             : console.log(\"Something wrong\");\r\n\r\n/*2. Задача (Попадание точки в область)*/\r\n//1.1\r\n// let x = prompt(\"Type x..\");\r\n// let y = prompt(\"Type y..\");\r\n//\r\n// if (x != \"\" && y != \"\") {\r\n//     if (x >= -3 && x <= 3 && y >= 0 && y <= 3) {\r\n//         alert(\"Вы попали в область :)\");\r\n//     } else {\r\n//         alert(\"Вы не попали в область :(\");\r\n//     }\r\n// }else{\r\n//     alert(\"Вы не ввели число\");\r\n// }\r\n\r\n//1.2\r\n\r\n// let x = prompt(\"Type x..\");\r\n// let y = prompt(\"Type y..\");\r\n//\r\n// if (x != \"\" && y != \"\") {\r\n//     if (x == 0  && y >= -1 && y <= 1) {\r\n//         alert(\"Вы попали в область :)\");\r\n//     } else {\r\n//         alert(\"Вы не попали в область :(\");\r\n//     }\r\n// }else{\r\n//     alert(\"Вы не ввели число\");\r\n// }\r\n\r\n//1.3\r\n\r\n// let x = prompt(\"Type x..\");\r\n// let y = prompt(\"Type y..\");\r\n// let circle = x**2 + y**2 === 1;\r\n//\r\n// if (x != \"\" && y != \"\") {\r\n//\r\n//     if (x >= -2 && x <= 0 && y >= -2 && y <= 0 || x**2 + y**2 <= 1 ) {\r\n//         alert(\"Вы попали в область :)\");\r\n//     } else {\r\n//         alert(\"Вы не попали в область :(\");\r\n//     }\r\n// }else{\r\n//     alert(\"Вы не ввели число\");\r\n// }\r\n\r\n\r\n/*3. Задача (Оператор switch)\r\nПри помощи prompt запросить у пользователя номер дня недели.Вывести при помощи alert\r\nназвание дня недели. если пользователь ввел некорректное значение вывести сообщение\r\n \"Такого дня недели не существует!\"\r\n*/\r\n// let numberOfWeek = +prompt('Type a number of week!');\r\n\r\n// switch (numberOfWeek) {\r\n//     case 1: alert(\"Monday\")\r\n//         break\r\n//     case 2: alert(\"Tuesday\")\r\n//         break\r\n//     case 3: alert(\"Wednesday\")\r\n//         break\r\n//     case 4: alert(\"Thursday\")\r\n//         break\r\n//     case 5: alert(\"Friday\")\r\n//         break\r\n//     case 6: alert(\"Saturday\")\r\n//         break\r\n//     case 7: alert(\"Sunday\")\r\n//         break\r\n//     default: alert(\"There is no such a day of the week!!\")\r\n// }\r\n\r\n/*4. Задача (Условный оператор)\r\nПользователь вводит два числа. Найти и вывести максимальное из двух чисел.\r\n */\r\n// let first = +prompt(\"Type a first number!\");\r\n// let second = +prompt(\"Type a second number\");\r\n// let max = first <= second ? max = second : max = first;\r\n// alert(`Max is ${max}`);\r\n\r\n/*5. Задача (Условный оператор)\r\nНайти максимальное из двух чисел. Учтите вариант равенства чисел\r\n*/\r\n\r\n// let num1 = 1;\r\n// let num2 = 0;\r\n// let max;\r\n//\r\n// max = num1 == num2? alert(\"Числа равны\")\r\n//     : num1 > num2? alert(\"Первое число больше второго\"):alert(\"Второе число больше первого\");\r\n\r\n/*6. Задача (Условный оператор)\r\nВ первом подъезде квартиры с 1 по 20. Во втором с 21 по 48. В третьем с 49 по 90. Пользователь вводит номер квартиры.\r\nПрограмма должна указать в каком подъезде находится данная квартира. Программа должна учитывать\r\nвариант ввода чисел за пределами диапазона 1..90.\r\n */\r\n\r\n// let apartmentNumber = +prompt(\"Type your number of apartment!\");\r\n\r\n// if (apartmentNumber >= 1 && apartmentNumber <= 20) {\r\n//     alert(\"Your apartment in the first porch \");\r\n// } else if (apartmentNumber >= 21 && apartmentNumber <= 48) {\r\n//     alert(\"Your apartment in the second porch \");\r\n// } else if (apartmentNumber >= 49 && apartmentNumber <= 90) {\r\n//     alert(\"Your apartment in the third porch \");\r\n// } else {\r\n//     alert(\"There is no such apartment\");\r\n// }\r\n\r\n/*7. Задача (Условный оператор)\r\nПользователь вводит логин и пароль. Если логин и пароль совпадают с указанными ниже, то выводится «Добро пожаловать».\r\nЕсли не совпадают – то «Ошибка входа»\r\n */\r\n\r\n// let login = \"admin\";\r\n// let password = \"admin\";\r\n\r\n// let userLogin = prompt(\"Type your login!\");\r\n// let userPassword = prompt(\"Type your password!\");\r\n// if (login === userLogin && login === userPassword) {\r\n//     alert(\"Wellcome\");\r\n// } else {\r\n//     alert(\"Login failed\");\r\n// }\r\n\r\n/*8. Задача (Условный оператор)\r\nПользователь вводит год рождения. Программа показывает количество лет и если лет больше или равно 16,\r\n то пишет – «добро пожаловать», если нет – «вход воспрещен».\r\n */\r\n// const minPass = 16;\r\n// let user = +prompt(\"Type your age!\");\r\n// if (minPass <= user) {\r\n//     alert(Wellcome');\r\n// } else {\r\n//     alert(\"No entry\");\r\n// }\r\n\r\n/*9. Задача (Условный оператор)\r\nСоздайте программу, которая выводит надбавку за стаж. Пользователь вводит стаж работы, а программа пишет ему надбавку.\r\n */\r\n\r\n// const experience = +prompt(\"Type your experience\");\r\n// if (experience >= 0 && experience <= 3) {\r\n//     alert(\"Your bonus will be 0%\");\r\n// } else if (experience > 3 && experience <= 10) {\r\n//     alert(\"Your bonus will be 10%\");\r\n// } else if (experience > 10 && experience <= 20) {\r\n//     alert(\"Your bonus will be 20%\");\r\n// } else if (experience > 20) {\r\n//     alert(\"Your bonus will be 25%\");\r\n// }else{\r\n//     alert(\"Wrong number\");\r\n// }\r\n\r\n/*10. Задача (креативная)\r\nНаписать программу которая будет склонять слово “товар” в зависимости от количества товаров в корзине. Например 1 - товар, 4 - товара, 6 - товаров.\r\n*/\r\n\r\n// let word = 'товар';\r\n// let userNum = +prompt(\"Введите число..\");\r\n// let magicStick = userNum % 100;\r\n//\r\n// if (magicStick >= 5 && magicStick <= 20 || magicStick === 0){\r\n//     alert(`У вас ${userNum} ${word + \"ов\"}`);\r\n// }else {\r\n//     magicStick = userNum % 10;\r\n//     if (magicStick > 1 && magicStick <= 4) {\r\n//         magicStick = userNum % 10;\r\n//         alert(`У вас ${userNum} ${word + \"а\"}`);\r\n//     } else if (magicStick === 1) {\r\n//         alert(`У вас ${userNum} ${word}`);\r\n//     } else {\r\n//         alert(\"Что то пошло не так\");\r\n//     }\r\n// }\r\n\r\n\r\n\r\n/*1. Задание (циклы)\r\nВывести числа от 4 до 400 на экран.\r\n*/\r\n// for (let i = 4; i <= 400; i++ ) {\r\n//     console.log(i);\r\n// }\r\n\r\n\r\n/*2. Задание (циклы)\r\nВывести числа в последовательности: 4 7 10 13 с помощью цикла.\r\n*/\r\n\r\n// for (let i = 4; i <= 13; i+=3 ) {\r\n//     console.log(i);\r\n// }\r\n\r\n/*3. Задание (циклы)\r\nВывести числа 654 653 652 до нуля.\r\n*/\r\n\r\n// for (let i = 654; i >=0; i--){\r\n//     console.log(i);\r\n// }\r\n\r\n/*4. Задание (циклы)\r\nВывести все годы с 1983 до 2017.\r\n*/\r\n\r\n// for (let i = 1983; i <= 2017; i++){\r\n//     console.log(i);\r\n// }\r\n\r\n/*5. Задание (циклы)\r\nВывести числа -4 -2 0 2 4 6 ...100.\r\n*/\r\n\r\n// for (let i = -4; i <= 100; i+=2){\r\n//     console.log(i);\r\n// }\r\n\r\n/*6. Задание (циклы)\r\nС помощью цикла напечатайте таблицу умножения на 7 от 1 до 9.\r\n*/\r\n\r\n// let i = 1;\r\n// for (i = 1; i <= 10; i++){\r\n//     let n  = i * 7;\r\n//     console.log(n);\r\n// }\r\n\r\n/*7. Задание (циклы)\r\nВыведите с помощью цикла коды спецсимволов от 1000 до 2000. Напомню, что спецсимвол получается комбинацией &#число; Например ӆ\r\n*/\r\n// for (let i = 500; i <= 2000; i++){\r\n//     let span = document.createElement('span');\r\n//     span.innerHTML = `&#${i} `;\r\n//     document.body.appendChild(span);\r\n// }\r\n\r\n/*8. Задание (циклы)\r\nНайти сумму чисел от 0 до 100 (включительно). (0+1+2+3+4+5).\r\n*/\r\n// let n= 0;\r\n// for (let i = 0; i <= 100; i++){\r\n//      n += i;\r\n// }\r\n// console.log(n);\r\n\r\n/*9. Задание (циклы)\r\nС помощью цикла вывести произведение чисел от 1 до 50.\r\n*/\r\n\r\n// let n = 1;\r\n// for (let i = 1; i <= 50; i++){\r\n//     n *= i;\r\n// }\r\n// console.log(n);\r\n\r\n\r\n/*10. Задание\r\nЗаполните массив следующим образом: в первый элемент запишите\r\n 'x', во второй 'xx', в третий 'xxx' и так далее. Длину массива вводить через prompt.\r\n*/\r\n\r\n\r\n// let myLength = +prompt(\"Type length of your array..\");\r\n// let arr = [];\r\n// let elem = \"\";\r\n//\r\n// for (let i = 0; i < myLength; i++){\r\n//     elem += 'x';\r\n//     arr.push(elem)\r\n// }\r\n// console.log(arr);\r\n\r\n/*Заполните массив следующим образом: в первый элемент запишите '1',\r\nво второй '22', в третий '333' и так далее. Длину массива вводить через prompt.*/\r\n\r\n// let myLength = +prompt(\"Type length of your array..\");\r\n// let arr = [];\r\n// let elem = \"\";\r\n//\r\n// for (let i = 1; i < myLength; i++){\r\n//\r\n//     for (let j = 1; j <= i; j++){\r\n//         elem += i;\r\n//\r\n//     }\r\n//     arr.push(elem);\r\n//     elem = \"\";\r\n//\r\n// }\r\n// console.log(arr);\r\n/*12. Задание\r\nДан массив с числами. Узнайте сколько элементов с начала массива надо сложить,\r\nчтобы в сумме получилось больше 10-ти.\r\n*/\r\n// let sum = 0;\r\n// let count = 0;\r\n// let arr = [10, 1, 5, 8, 9, 10];\r\n//\r\n// for (let i = 0; i <= arr.length; i++){\r\n//     if (arr[i] >= 10){\r\n//         count = 1;\r\n//         break;\r\n//     }else {\r\n//         sum += arr[i];\r\n//         count++;\r\n//         console.log(sum);\r\n//         if (sum > 10){\r\n//             break;\r\n//         }\r\n//     }\r\n// }\r\n// console.log(`Вам понадобилось ${count} элементов`);\r\n\r\n/*13. Задание\r\nДан массив с числами. Не используя метода reverse переверните его элементы в обратном порядке.\r\n*/\r\n// let arr = [1, 2, 3, 4, 5, 6];\r\n// let length = arr.length - 1;\r\n// for (let i = length; i >= 0; i--) {\r\n//     console.log(arr[i]);\r\n// }\r\n\r\n/*14. Задание\r\nДан массив с числами. Запишите в новый массив только те числа, которые больше нуля и меньше 10-ти.\r\n*/\r\n\r\n// let arr = [1, 5, 12, 44, 5, 56, 7, 2, 1, 88];\r\n// let newArr = [];\r\n// for (let i = 0; i < arr.length; i++){\r\n//     if (arr[i] > 0 && arr[i] < 10){\r\n//         newArr.push(arr[i]);\r\n//     }\r\n// }\r\n// console.log(newArr);\r\n\r\n/*15. Задание\r\nДан массив с целыми числами. Создайте из него новый массив, где останутся лежать только четные из этих чисел.\r\n*/\r\n\r\n// let arr = [1, 2, 3, 4, 6, 8, 10, 11, 14, 66, 33, 22];\r\n// let newArr = [];\r\n// for (let i = 0; i < arr.length; i++){\r\n//     if (arr[i]%2 === 0){\r\n//         newArr.push(arr[i]);\r\n//     }\r\n// }\r\n// console.log(newArr);\r\n\r\n/*16. Задание\r\nДан массив [1, 2, 3, 4, 5, 6]. Сделать из него массив [2, 1, 4, 3, 6, 5]\r\n*/\r\n\r\n// let arr = [1, 2, 3, 4, 5, 6];\r\n// let current;\r\n// for (let i = 0; i < arr.length; i+=2){\r\n//     current = arr[i];\r\n//     arr[i] = arr[i+1];\r\n//     arr[i+1] = current;\r\n// }\r\n//\r\n// console.log(arr);\r\n\r\n\r\n/*17. Задание\r\nДан массив [1, 2, 3, 4, 5, 6]. Сделать из него массив [5, 6, 3, 4, 1, 2]\r\n*/\r\n\r\n// let arr = [1, 2, 3, 4, 5, 6];\r\n// arr.reverse();\r\n// let current;\r\n// for (let i = 0; i < arr.length; i+=2){\r\n//     current = arr[i];\r\n//     arr[i] = arr[i+1];\r\n//     arr[i+1] = current;\r\n// }\r\n//\r\n// console.log(arr);\r\n\r\n/*19. Задание\r\nСформировать 3 матрицы изображенные на картинке\r\n*/\r\n\r\n// 1.1\r\n/*\r\nconst size = 10;\r\nconst matrix = [];\r\nfor (let i = 1; i < size; i++){\r\n    matrix[i] = [];\r\n    for (let j = 1; j < size; j++){\r\n        matrix[i][j] = i * j;\r\n    }\r\n}\r\nconsole.log(matrix);*/\r\n\r\n\r\n// 1.2\r\n// const size = 10;\r\n// const matrix = [];\r\n// for (let i = 0; i < size; i++){\r\n//     matrix[i] = [];\r\n//     for (let j = 0; j < size; j++){\r\n//         if (i === j){\r\n//            matrix[i][j] = 1;\r\n//         }else if (i === size - 1 - j){\r\n//             matrix[i][j] = 2;\r\n//         }else if (i < j && i <= size - 1 - j){\r\n//             matrix[i][j] = 3;\r\n//         }else if (i < j && i >= size - 1 - j){\r\n//             matrix[i][j] = 4;\r\n//         }else if (i > j && i >= size - 1 - j){\r\n//             matrix[i][j] = 5;\r\n//         }else if (i > j && i <= size - 1 - j){\r\n//             matrix[i][j] = 6;\r\n//         }\r\n//     }\r\n// }\r\n// console.log(matrix);\r\n\r\n//1.3 не осилил пока)\r\n\r\n// let size = 10;\r\n// let matrix = [];\r\n// for (let i = 0; i < size; i++){\r\n//     matrix[i] = [];\r\n//     for (let j = 0; j < size; j++){\r\n//         if (i === j){\r\n//             matrix[i][j] = 1;\r\n//             matrix[i][0] = 1;\r\n//             break;\r\n//         }else if (){\r\n//\r\n//         }\r\n//         else{\r\n//             matrix[i][j] = 0;\r\n//         }\r\n//     }\r\n// }\r\n// console.log(matrix);\r\n\r\n/* Задание 1\r\nНаписать функцию которая первым принимает значение, которым заполнять массив, а вторым - сколько элементов должно\r\nбыть в массиве. Пример: arrayFill('x', 5) сделает массив ['x', 'x', 'x', 'x', 'x'].\r\n*/\r\n\r\n// function arrayFill(x, size) {\r\n//\r\n//     let arr = [];\r\n//     for (let i = 0; i < size; i++){\r\n// //         arr[i] = x;\r\n//     }\r\n//     console.log(arr);\r\n// }\r\n// arrayFill(\"x\", 5);\r\n\r\n/*Задание 2\r\nДан трехмерный массив с числами, например [[[1, 2], [3, 4]], [[5, 6], [7, 8]]].\r\nНайдите сумму элементов этого массива. Массив, конечно же, может быть произвольным.\r\n */\r\n\r\n// function tripleSum() {\r\n//     let sum = 0;\r\n//     let arr = [[[1, 2, 3], [4, 5], [6, 7], [8, 9]]];\r\n//\r\n//     for (let i = 0; i < arr.length; i++){\r\n//         for (let j = 0; j < arr[i].length; j++){\r\n//             for(let k = 0; k < arr[i][j].length; k++){\r\n//                 sum += arr[i][j][k];\r\n//             }\r\n//         }\r\n//     }\r\n// console.log(sum);\r\n// }\r\n// tripleSum();\r\n\r\n/*Задание 3\r\nСделайте функцию isNumberInRange, которая параметром принимает число и проверяет, что оно больше нуля и меньше 10.\r\nЕсли это так - пусть функция возвращает true, если не так - false.\r\n*/\r\n\r\n// function isNumberInRange(num) {\r\n//     num = num > 0 && num < 10 ? true : false;\r\n//     return num;\r\n//\r\n// }\r\n//\r\n// console.log(isNumberInRange(1));\r\n\r\n/*Задание 4\r\nСделайте функцию isEven() (even - это четный), которая параметром принимает целое число и проверяет:\r\nчетное оно или нет. Если четное - пусть функция возвращает true, если нечетное - false.\r\n*/\r\n\r\n// function isEven(intNum) {\r\n//     intNum = intNum % 2 === 0 ? true : false;\r\n//     return intNum;\r\n// }\r\n//\r\n// console.log(isEven(211));\r\n\r\n/*Задание 5\r\nДан массив с целыми числами. Создайте из него новый массив, где останутся лежать только четные из этих чисел.\r\nДля этого используйте вспомогательную функцию isEven из предыдущей задачи\r\n*/\r\n// function isEven(intNum) {\r\n//     intNum = intNum % 2 === 0 ? true : false;\r\n//     return intNum;\r\n// }\r\n// function checkIsEven() {\r\n//     let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n//     let newArray = []\r\n//     for (let i = 0; i < arr.length; i++){\r\n//         if (isEven(arr[i])){\r\n//             newArray.push(arr[i]);\r\n//         }\r\n//     }\r\n//     console.log(newArray);\r\n// }\r\n// checkIsEven();\r\n/*Задание 6\r\nСделайте функцию getDivisors, которая параметром принимает число и возвращает массив его делителей\r\n(чисел, на которое делится данное число).\r\n*/\r\n\r\n// function getDivisors(num) {\r\n//     let arr = []\r\n//     for (let i = 0; i <= num; i++){\r\n//         if (num % i === 0){\r\n//             arr.push(i);\r\n//         }\r\n//     }\r\n//     return arr;\r\n// }\r\n//\r\n// console.log(getDivisors(10));\r\n\r\n/*Задание 7\r\nСоздайте функцию, которая получает два параметра – число и степень числа. Используя ** внутри функции,\r\n возведите число в степень и выведите с помощью console.log.\r\n*/\r\n\r\n// function pow (num, n) {\r\n//     console.log(num**n);\r\n// }\r\n// pow(2, 3);\r\n\r\n/*Задание 8\r\nФункция принимает параметр - возраст пользователя. Если число больше 16 – то выводим «добро пожаловать»,\r\nесли меньше – “вы еще молоды”\r\n*/\r\n\r\n// function isAge(age){\r\n//\r\n//     if (age > 16){\r\n//         alert(\"Welcome!!!\");\r\n//     }else{\r\n//         alert(\"You're still yong!\");\r\n//     }\r\n// }\r\n// isAge(16);\r\n\r\n/*Задание 9\r\nМодифицируйте предыдущий пример – учтите вариант, если пользователь не передал параметр в функцию.\r\nВ таком случае выведите сообщение – “Введите возраст”. Реализуйте два вида проверки наличия аргумента –\r\nпроверка на undefined и оператор ||.\r\n*/\r\n\r\n// function isAge(age){\r\n//     age = age || prompt(\"Type your age!!\");\r\n//         if (age > 16) {\r\n//             alert(\"Welcome!!!\");\r\n//         } else {\r\n//             alert(\"You're still yong!\");\r\n//         }\r\n//\r\n// }\r\n// isAge();\r\n\r\n/*Задание 10\r\nСоздайте функцию, которая считает длину массива и возвращает ее в виде числа. Массив в функцию передается как аргумент.\r\nЕсли аргумент не задан – выводится сообщение об ошибке.\r\n*/\r\n\r\n// function arrayLength(arr) {\r\n//     return  arr ? arr.length : alert(\"Err0r\");\r\n// }\r\n// console.log(arrayLength([2,2,3,4,5]));\r\n\r\n/*Задание 11\r\nПользователь вводит числа. Если число больше 10, то функция возвращает квадрат числа, если меньше 7 – пишет,\r\nчто число меньше 7. Если 8, 9 – то возвращает соответственно 7 или 8. Реализуйте решение с несколькими return.\r\n*/\r\n\r\n// function returner() {\r\n\r\n//     let num =  parseFloat(prompt(\"Type a number\"));\r\n//     let result = null;\r\n//     if (num > 10){\r\n//         return Math.sqrt(num);\r\n//     }else if (num < 7){\r\n//         return alert(\"The number less than 7\");\r\n//     }else if (num === 7 || num === 8){\r\n//         result = num;\r\n//         return result;\r\n//     }else{\r\n//         alert(\"err0or\");\r\n//     }\r\n// }\r\n//\r\n// console.log(returner());\r\n\r\n/*Задание 12\r\nДана строка. Сделайте заглавным первый символ каждого слова этой строки. Для этого сделайте\r\nфункцию ucfirst, которая будет получать строку, делать первый символ этой строки заглавным и возвращать обратно\r\n строку с заглавной первой буквой.*/\r\n\r\n// function ucFirst(string) {\r\n//     let firstChar = string[0].toUpperCase();\r\n//     let withoutFirst = string.slice(1);\r\n//     let newStr = firstChar + withoutFirst;\r\n//     return newStr;\r\n// }\r\n// console.log(ucFirst(\"first character train matrix\"));\r\n\r\n// function ucFirst(string) {\r\n//     let arrayWords = string.split(\" \"); //разбиваем строку на массив\r\n//     let result = \"\";  // В будущем запишем результат\r\n//     for (let i = 0; i < arrayWords.length; i++){\r\n//         let word = arrayWords[i];\r\n//         let firstChar = word.slice(0, 1).toUpperCase();\r\n//         let otherSentence = word.slice(1, word.length);\r\n//         result += firstChar + otherSentence + \" \";\r\n//     }\r\n//     return result;\r\n// }\r\n// console.log(ucFirst(\"first character train matrix\"));\r\n\r\n/*Задание 13\r\nДана строка вида 'var_text_hello'. Сделайте из него текст 'varTextHello'.*/\r\n\r\n/*function trueStr(str) {\r\n    return str.replace(/_/gi , \" \", str);\r\n}\r\n\r\nconsole.log(trueStr(\"qwe_qwe_qwe\"));\r\n*/\r\n\r\n/*Задание 14\r\nСделайте функцию inArray, которая определяет, есть в массиве элемент с заданным текстом или нет. Функция первым\r\nпараметром должна принимать текст элемента, а вторым - массив, в котором делается поиск. Функция должна возвращать\r\ntrue или false. Показать решение.*/\r\n\r\n// let arr = [\"roll\", \"pit\", \"staff\", \"prom\", \"sell\", \"karma\"];\r\n//\r\n// function inArray(str, arr) {\r\n//     let found = false;\r\n//     for (let i = 0; i < arr.length; i++) {\r\n//\r\n//         if (str === arr[i]) {\r\n//             found = true;\r\n//         }\r\n//     }\r\n//     return found;\r\n// }\r\n//\r\n// console.log(inArray(\"prosm\", arr));\r\n\r\n\r\n/*Задание 15\r\nДана строка, например, '123456'. Сделайте из нее '214365'.*/\r\n\r\n// function reverseStr() {\r\n//     let str = \"123456\";\r\n//     let arr = str.split(\"\", str.length );\r\n//     let current;\r\n//     for (let i = 0; i < arr.length; i+=2){\r\n//         current = arr[i];\r\n//         arr[i] = arr[i + 1];\r\n//         arr[i + 1] = current;\r\n//     }\r\n//     str = arr.join(\"\");\r\n//     console.log(str);\r\n// }\r\n// reverseStr();\r\n\r\n/*Задание 16\r\nНапиши функцию создания генератора sequence(start, step). Она при вызове возвращает другую функцию-генератор,\r\nкоторая при каждом вызове дает число на 1 больше, и так до бесконечности. Начальное число, с которого начинать отсчет,\r\n и шаг, задается при создании генератора. Шаг можно не указывать, тогда он будет равен одному.\r\n Начальное значение по умолчанию равно 0. Генераторов можно создать сколько угодно.*/\r\n\r\n// function sequence(start, step) {\r\n//     start = start || 0;\r\n//     step = step || 1;\r\n//     let defaultStart = start;\r\n//     return () => {\r\n//         let result = defaultStart;\r\n//         defaultStart += step;\r\n//         return result;\r\n//     }\r\n// }\r\n//\r\n// let gen = sequence(10, 1);\r\n// console.log(gen());\r\n// console.log(gen());\r\n\r\n/*Задание 17\r\nТакже, нужна функция take(gen, x) которая вызвает функцию gen заданное число (x) раз\r\nи возвращает массив с результатами вызовов.*/\r\n\r\n// function sequence(start, step) {\r\n//     start = start || 0;\r\n//     step = step || 1;\r\n//     let defaultStart = start;\r\n//     return () => {\r\n//         let result = defaultStart;\r\n//         defaultStart += step;\r\n//         return result;\r\n//     }\r\n// }\r\n//\r\n// let gen = sequence(10, 1);\r\n// console.log(gen());\r\n// console.log(gen());\r\n//\r\n// function take(gen, x) {\r\n//     let arr = [];\r\n//     for (let i = 0; i < x; i++){\r\n//         arr.push(gen());\r\n//     }\r\n//     return arr;\r\n// }\r\n// let gen2 = sequence(0 , 2);\r\n// console.log(take(gen2, 5));\r\n\r\n/*Задание 18\r\nНапиши функцию map(fn, array), которая принимает на вход функцию и массив, и обрабатывает\r\nкаждый элемент массива этой функцией, возвращая новый массив. Пример:\r\n*/\r\n// function square(x) {\r\n//     return x * x;\r\n// }\r\n// function map(fn, array) {\r\n//     let newArr = [];\r\n//     if (array.length === 0){\r\n//         return newArr;\r\n//     }else {\r\n//         for (let i = 0; i < array.length; i++) {\r\n//             newArr.push(fn(array[i]));\r\n//         }\r\n//         return newArr;\r\n//     }\r\n//\r\n// }\r\n// let arr = [1, 2, 3, 4, 5];\r\n// console.log(map(square, arr));\r\n// console.log(arr);\r\n\r\n/*Задание 19\r\nНапиши функцию fmap(a, gen), которая принимает на вход 2 функции, a и gen, где gen — функция-генератор вроде\r\nтой, что была в 17 задании. fmap возвращает новую функцию-генератор, которая при каждом вызове берет следующее\r\nзначение из gen и пропускает его через функцию a. Пример:*/\r\n\r\n// function square(x) {\r\n//     return x * x;\r\n// }\r\n// function sequence(start, step) {\r\n//     start = start || 0;\r\n//     step = step || 1;\r\n//     let defaultStart = start;\r\n//     return () => {\r\n//         let result = defaultStart;\r\n//         defaultStart += step;\r\n//         return result;\r\n//     }\r\n// }\r\n//\r\n//\r\n// function fmap(a, gen) {\r\n//\r\n//     return () => {\r\n//         // let res = [];\r\n//         // res.push(gen2());\r\n//\r\n//         let args = arguments.length;\r\n//         let arr = [];\r\n//         for (let i = 0; i < args; i++){\r\n//             arr[i] = arguments[i];\r\n//         }\r\n//         let x = a(gen2.apply(null, arr))\r\n//         return x;\r\n//     }\r\n// }\r\n// let gen2 = sequence(1, 1);\r\n// let squareGen = fmap(square, gen2);\r\n// console.log(squareGen());\r\n// console.log(squareGen());\r\n// console.log(squareGen());\r\n//\r\n// function add(a, b) {\r\n//     return a + b;\r\n// }\r\n//\r\n// let sum = fmap(square, add)\r\n// console.log(sum(2, 3));\r\n// console.log(sum(5, 7));\r\n\r\n\r\n\r\n\r\n\r\n/*Задание 20\r\nНаписать функцию filter, которая принимает функцию-предикат и массив.\r\nВозвращает она массив значений,\r\nдля которых предикат вернет true.*/\r\n\r\n// function isEven(x) {\r\n//     return x % 2 === 0;\r\n// }\r\n// let input = [1, 2, 3, 4, 5, 6];\r\n//\r\n// function filter(input, isEven) {\r\n//     let result = [];\r\n//     for (let i = 0; i < input.length; i++){\r\n//         if (isEven(input[i]))\r\n//             result.push(input[i]);\r\n//     }\r\n//     return result;\r\n// }\r\n// console.log(filter(input, isEven));\r\n\r\n/*1. Задача (Рекурсия)\r\nДано натуральное число n. Выведите все числа от 1 до n.\r\n*/\r\n\r\n// function rec(n) {\r\n//     if (n === 1){\r\n//         return n;\r\n//     }\r\n//     console.log(rec(n - 1));\r\n//     return n;\r\n// }\r\n//\r\n// console.log(rec(5));\r\n\r\n/*2. Задача (Рекурсия)\r\nДаны два целых числа A и В (каждое в отдельной строке). Выведите все числа от A до B включительно,\r\nв порядке возрастания, если A < B, или в порядке убывания в противном случае.\r\n*/\r\n\r\n// const a = 15;\r\n// const b = 10;\r\n// function recA(a, b) {\r\n//     if (a === b) {\r\n//         return a;\r\n//     }else {\r\n//         if (a < b) {\r\n//             console.log(a);\r\n//             return recA(a + 1, b);\r\n//         }else{\r\n//             console.log(a);\r\n//             return recA(a - 1, b);\r\n//         }\r\n//\r\n//     }\r\n// }\r\n// recA(a,b);\r\n\r\n\r\n/*3. Задача (Рекурсия)\r\nДано натуральное число N. Вычислите сумму его цифр.\r\nПри решении этой задачи нельзя использовать строки, списки, массивы (ну и циклы, разумеется).\r\n*/\r\n\r\n// let number = 12345;\r\n// let current = 0;\r\n// let sum = 0;\r\n//\r\n// function recSum(n) {\r\n//     if (n === 0){\r\n//         return n;\r\n//     }else{\r\n//         current = n % 10;\r\n//         n = (n - current) / 10;\r\n//         sum += current;\r\n//         return recSum(n)\r\n//     }\r\n// }\r\n// recSum(number);\r\n//\r\n// console.log(sum);\r\n\r\n/*4. Задача (Рекурсия)\r\nДано натуральное число N. Выведите все его цифры по одной,\r\nв обратном порядке, разделяя их пробелами или новыми строками.\r\nПри решении этой задачи нельзя использовать строки, списки,\r\nмассивы (ну и циклы, разумеется). Разрешена только рекурсия и\r\nцелочисленная арифметика.\r\n*/\r\n\r\n// let number = 123543;\r\n// let current = 0;\r\n//\r\n// function recOut(n) {\r\n//     if ( n === 0){\r\n//         return n;\r\n//     }else{\r\n//         current = n % 10;\r\n//         n = (n - current) / 10;\r\n//         console.log(current);\r\n//         return recOut(n);\r\n//     }\r\n// }\r\n// recOut(number);\r\n\r\n/* Задача 6 и 8 ООП.\r\nРеализуйте класс Worker (Работник), который будет иметь следующие свойства:\r\nname (имя), surname (фамилия), rate (ставка за день работы),\r\ndays (количество отработанных дней). Также класс должен иметь\r\nметод getSalary(), который будет выводить зарплату работника.\r\nЗарплата - это произведение (умножение) ставки rate на количество\r\nотработанных дней days.Модифицируйте класс Worker из предыдущей задачи\r\nследующим образом: для свойства\r\nrate и для свойства days сделайте еще и методы-сеттеры.\r\n*/\r\n\r\n// class Worker {\r\n//     constructor(name, surname, rate, days) {\r\n//         this.name = name;\r\n//         this.surname = surname;\r\n//         this.rate = rate;\r\n//         this.days = days;\r\n//     }\r\n//\r\n//     getSalary(){\r\n//         return this.rate * this.days;\r\n//     }\r\n//     set setRate(rate){\r\n//         this.rate = rate;\r\n//     }\r\n//     set setDays(days){\r\n//         this.days = days;\r\n//     }\r\n//\r\n// }\r\n//\r\n// let worker = new Worker('Ivan', 'Ivanov', 10, 31);\r\n//\r\n// console.log(worker.name);\r\n// console.log(worker.surname);\r\n// console.log(worker.rate);\r\n// console.log(worker.days);\r\n// console.log(worker.getSalary());\r\n// console.log(worker.setRate = 15);\r\n// console.log(worker.setDays = 20);\r\n//console.log(worker.getSalary());\r\n\r\n/*9. Задача (ООП)\r\nРеализуйте класс MyString, который будет иметь следующие методы: метод reverse(), который параметром принимает строку, а возвращает ее в перевернутом виде, метод ucFirst(), который параметром принимает строку, а возвращает эту же строку, сделав ее первую букву заглавной и метод ucWords, который принимает строку и делает заглавной первую букву каждого слова этой строки.\r\n*/\r\n\r\n// class MyString {\r\n//     constructor(){\r\n//\r\n//     }\r\n//     reverse(str){\r\n//         return str.split(\"\").reverse().join(\"\");\r\n//     }\r\n//     ucFirst(str){\r\n//         let firstChar = str.slice(0, 1).toUpperCase();\r\n//         let result = firstChar + str.slice(1, str.length);\r\n//         return result;\r\n//     }\r\n//     ucWords(str){\r\n//         let arrayWords = str.split(\" \"); //разбиваем строку на массив\r\n//         let result = \"\";  // В будущем запишем результат\r\n//         for (let i = 0; i < arrayWords.length; i++) {\r\n//             let word = arrayWords[i];\r\n//             let firstChar = word.slice(0, 1).toUpperCase();\r\n//             let otherSentence = word.slice(1, word.length);\r\n//             result += firstChar + otherSentence + \" \";\r\n//         }\r\n//     return result;\r\n//\r\n//         return result;\r\n//     }\r\n//\r\n// }\r\n// const str = new MyString();\r\n//\r\n// console.log(str.reverse(\"abcde\"));\r\n// console.log(str.ucFirst(\"abcde\"));\r\n// console.log(str.ucWords(\"abcde abcde abcde\"));\r\n\r\n\r\n/*10. Задача (ООП)\r\nРеализуйте класс Student (Студент), который будет наследовать от класса User.\r\nЭтот класс должен иметь следующие свойства: name (имя, наследуется от User),\r\nsurname (фамилия, наследуется от User), year (год поступления в вуз).\r\nКласс должен иметь метод getFullName() (наследуется от User),\r\nс помощью которого можно вывести одновременно имя и фамилию студента.\r\nТакже класс должен иметь метод getCourse(), который будет выводить текущий\r\nкурс студента (от 1 до 5). Курс вычисляется так: нужно от текущего года\r\nотнять год поступления в вуз. Текущий год получите самостоятельно.\r\n*/\r\n\r\n// class User {\r\n//     constructor(name, surname, year) {\r\n//         this.name = name;\r\n//         this.surname = surname;\r\n//         this.year = year;\r\n//\r\n//     }\r\n//     getFullName(){\r\n//         return `${this.name} ${this.surname}`\r\n//     }\r\n// }\r\n// function getYear(){\r\n//     let year = new Date();\r\n//     return year.getFullYear();\r\n// }\r\n// class Student extends User{\r\n//     constructor(name, surname, year) {\r\n//         super(name, surname, year);\r\n//     }\r\n//     getCourse(){\r\n//         return getYear() - this.year;\r\n//     }\r\n// }\r\n//\r\n// let student = new Student('Pasha', 'Pavlov', 2015);\r\n// console.log(student.name);\r\n// console.log(student.surname);\r\n// console.log(student.getFullName());\r\n// console.log(student.year);\r\n// console.log(student.getCourse());\r\n\r\n/*12. Задача (функции работы с массивами)\r\nДаны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Объедините их вместе.\r\n*/\r\n\r\n// function joinArr() {\r\n//     let a = ['a', 'b', 'c'];\r\n//     let b = [1, 2, 3];\r\n//     let newArr = [];\r\n//     newArr = a.concat(b);\r\n//     return newArr;\r\n// }\r\n//\r\n// console.log(joinArr());\r\n\r\n/*13. Задача (функции работы с массивами)\r\nДан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3.*/\r\n\r\n// let a = ['a', 'b', 'c'];\r\n// function addToArr() {\r\n//     for (let i = 1; i <= 3; i++){\r\n//         a.push(i);\r\n//     }\r\n//     return a;\r\n// }\r\n//\r\n// console.log(addToArr());\r\n\r\n/*14. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6. */\r\n\r\n// let a = ['a', 'b', 'c'];\r\n// function addToArr() {\r\n//     for (let i = 6; i >= 4; i--){\r\n//         a.unshift(i);\r\n//     }\r\n//     return a;\r\n// }\r\n//\r\n// console.log(addToArr());\r\n\r\n/*15. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3, 4, 5]. С помощью метода slice\r\nзапишите в новый элементы [1, 2, 3].*/\r\n\r\n// let arr = [1, 2, 3, 4, 5];\r\n//\r\n// function myArray(arr) {\r\n//     let newArr = [];\r\n//     for (let i = 0; i < arr.length; i++){\r\n//         newArr = arr.slice(0, 3);\r\n//     }\r\n//     return newArr;\r\n// }\r\n// console.log(myArray(arr));\r\n\r\n/*16. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3, 4, 5]. С помощью метода slice\r\nзапишите в новый элементы [4, 5].*/\r\n\r\n// let arr = [1, 2, 3, 4, 5];\r\n// //\r\n// // function myArray2(arr) {\r\n// //     let newArr = [];\r\n// //     for (let i = 0; i < arr.length; i++){\r\n// //         newArr = arr.slice(3, 5);\r\n// //     }\r\n// //     return newArr;\r\n// // }\r\n// //\r\n// // console.log(myArray2(arr));\r\n\r\n/*17. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3, 4, 5]. С помощью метода splice\r\nпреобразуйте массив в [1, 4, 5].*/\r\n\r\n// let arr = [1, 2, 3, 4, 5];\r\n// function proArr(arr) {\r\n//     arr.splice(1,2);\r\n//     return arr;\r\n// }\r\n//\r\n// console.log(proArr(arr));\r\n\r\n/*18. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3, 4, 5]. С помощью метода splice\r\nзапишите в новый массив элементы [2, 3, 4].*/\r\n\r\n// let arr = [1, 2, 3, 4, 5];\r\n// function proArr(arr) {\r\n//     let newArr = [];\r\n//\r\n//     arr.splice(0, 1);\r\n//     arr.splice(3, 1);\r\n//     for (let i = 0; i < arr.length; i++){\r\n//         newArr.push(arr[i]);\r\n//\r\n//     }\r\n//     return newArr;\r\n// }\r\n// console.log(proArr(arr));\r\n\r\n\r\n/*19. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3, 4, 5]. С помощью метода splice\r\nсделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5]*/\r\n\r\n// function addToArray() {\r\n//     let arr = [1, 2, 3, 4, 5];\r\n//     arr.splice(3,0, 'a', 'b', 'c');\r\n//     return arr;\r\n// }\r\n//\r\n// console.log(addToArray());\r\n\r\n/*20. Задача (функции работы с массивами)\r\nДан массив [1, 2, 3, 4, 5]. С помощью метода splice\r\nсделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].*/\r\n\r\n// function addToArray2() {\r\n// //     let arr = [1, 2, 3, 4, 5];\r\n// //     arr.splice(1, 0, 'a', 'b');\r\n// //     arr.splice(6, 0, 'c');\r\n// //     arr.splice(8, 0 , 'e');\r\n// //     return arr;\r\n// // }\r\n// //\r\n// // console.log(addToArray2());\r\n\r\n/*21. Задача (функции работы с массивами)\r\nДан объект {js:'tгest', jq: 'hello', css: 'world'}.\r\nПолучите массив ео ключей.*/\r\n\r\n// const myObject = {\r\n//     js: \"test\",\r\n//     jq: 'hello',\r\n//     css: 'word'\r\n// }\r\n// function getKeys(obj) {\r\n//     return Object.keys(obj);\r\n// }\r\n//\r\n// console.log(getKeys(myObject));\r\n"},"lineCount":null}},"error":null,"hash":"7d150e5d625bd93362af47df022dbf22","cacheData":{"env":{}}}