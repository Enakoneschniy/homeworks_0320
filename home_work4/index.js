'use strict'

/*1. Задача (Рекурсия)
Дано натуральное число n. Выведите все числа от 1 до n.
*/

{
    let a = 1;
    let rec = (n) => {
        if (n === 1) {
            console.log(n)
            return n;
        }
        console.log(n);
        rec (n-1);
    }
 rec(3);
}

// 2. Задача (Рекурсия)
// Даны два целых числа A и В (каждое в отдельной строке). Выведите все числа от A до B включительно, в порядке возрастания, если A < B, или в порядке убывания в противном случае.

{
    console.log('---------------------------------------------------');
    let rec = (a, b) => {
        if (a === b){
            console.log(a);
            return a;
        }
        else if (a <= b){
            console.log(a);
            return rec(a+1, b);
        } else {
            console.log(a);
            return rec(a-1, b);
        }
    } 
    rec (0,2)
}

// 3. Задача (Рекурсия)
// Дано натуральное число N. Вычислите сумму его цифр.
// При решении этой задачи нельзя использовать строки, списки, массивы (ну и циклы, разумеется).
{
    console.log('---------------------------------------------------');
    const calc = value => {
        let sum = 0;

        const sumNum = value => {
            if (value === 0) {
                return console.log(sum);
            } else {
                let n = value % 10;
                sum += n;
                value = (value - n) / 10;
                sumNum(value);
            }
        }
        return sumNum(value);
    }

    calc(47);
}


// 4. Задача (Рекурсия)
// Дано натуральное число N. Выведите все его цифры по одной, в обратном порядке, разделяя их пробелами или новыми строками.
// При решении этой задачи нельзя использовать строки, списки, массивы (ну и циклы, разумеется). Разрешена только рекурсия и целочисленная арифметика.

{
    console.log('---------------------------------------------------');

const sumOfNum = value => {
    if (value === 0) {
        return;
    } else {
        let n = value % 10;
        console.log(n);
        value = (value - n) / 10;
        sumOfNum(value);
    }
}

sumOfNum(45);
}

/*
Задача 5
Дано натуральное число N. Выведите все его цифры по одной, в обычном порядке, разделяя их пробелами или новыми строками.
При решении этой задачи нельзя использовать строки, списки, массивы (ну и циклы, разумеется). Разрешена только рекурсия и целочисленная арифметика.
*/
{
    console.log('---------------------------------------------------');

    const sumOfNum = value => {
        if (value === 0) {
            return;
        } else {
            let n = value % 10;
            value = (value - n) / 10;
            sumOfNum(value);
            console.log(n);
        }
    }

    sumOfNum(45);
}


// 12. Задача (функции работы с массивами)
// Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Объедините их вместе.
{
    console.log('---------------------------------------------------');
    const arr = ['a', 'b', 'c'];
    const arr2 = [1, 2, 3]
    const arr3 = arr.concat(arr2);
    console.log(arr3);
}

// 13. Задача (функции работы с массивами)
// Дан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3.
{
    console.log('---------------------------------------------------');
    const arr = ['a', 'b', 'c'];
    arr.push(1, 2, 3)
    console.log(arr);
}

// 14. Задача (функции работы с массивами)
// Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.
{
    console.log('---------------------------------------------------');
    const arr = ['a', 'b', 'c'];
    arr.unshift(4, 5, 6)
    console.log(arr);
}

// 15. Задача (функции работы с массивами)
// Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [1, 2, 3].
{
    console.log('---------------------------------------------------');
    const arr = [1, 2, 3, 4, 5];
    const arr2 = arr.slice(0, 3);
    console.log(arr2);
}
// 16. Задача (функции работы с массивами)
// Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [4, 5].
{
    console.log('---------------------------------------------------');
    const arr = [1, 2, 3, 4, 5];
    const arr2 = arr.slice(3, 5);
    console.log(arr2);
}
// 17. Задача (функции работы с массивами)
// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте массив в [1, 4, 5].
{
    console.log('---------------------------------------------------');
    const arr = [1, 2, 3, 4, 5];
    arr.splice(1, 2);
    console.log(arr);
}
// 18. Задача (функции работы с массивами)
// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в новый массив элементы [2, 3, 4].
{
    console.log('---------------------------------------------------');
    const arr = [1, 2, 3, 4, 5];
    const arr2 = arr.splice(1, 3);
    console.log(arr2);
}
// 19. Задача (функции работы с массивами)
// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5]
{
    console.log('---------------------------------------------------');
    const arr = [1, 2, 3, 4, 5];
    arr.splice(3, 0, 'a', 'b', 'c');
    console.log(arr);
}
// 20. Задача (функции работы с массивами)
// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
{
    console.log('---------------------------------------------------');
    const arr = [1, 2, 3, 4, 5];
    arr.splice(1, 0, 'a', 'b');
    arr.splice(6, 0, 'c');
    arr.splice(8, 0, 'e');
    console.log(arr);
}
// 21. Задача (функции работы с массивами)
// Дан объект {js:'test', jq: 'hello', css: 'world'}. Получите массив его ключей.
console.log('---------------------------------------------------');
const obj = {
js:'test',
jq: 'hello',
css: 'world'
}
const res = Object.keys(obj);
console.log(res);